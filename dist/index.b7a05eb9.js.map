{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-bce803148f1f31a5.js","src/main.ts","src/kaboom.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/kaboom/dist/kaboom.mjs","node_modules/kaboom/src/math.ts","node_modules/kaboom/src/utils.ts","node_modules/kaboom/src/gamepad.json","node_modules/kaboom/src/app.ts","node_modules/kaboom/src/gfx.ts","node_modules/kaboom/src/assets.ts","node_modules/kaboom/src/easings.ts","node_modules/kaboom/src/texPacker.ts","node_modules/kaboom/src/kaboom.ts","src/scenes/helloworld.ts","src/scenes/kMatterTest.ts","src/kMatter.ts","node_modules/matter-js/build/matter.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7dd44675b7a05eb9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// Imports\r\nimport k from './kaboom';\r\n// Import Scenes\r\nimport HelloWorld from './scenes/helloworld';\r\nimport kMatterTest from './scenes/kMatterTest';\r\n\r\n// Add Scenes\r\nk.scene('Hello-World-EX', HelloWorld)\r\nk.scene('kMatter-Test', kMatterTest)\r\n\r\n// Run Scenes\r\n\r\n//k.go('Hello-World-EX'); // This is a template scene\r\n\r\nk.go('kMatter-Test') // This is a physics (matter) template scene\r\n","import kaboom from \"kaboom\"\r\n\r\nexport const k = kaboom({\r\n    background: [0,0,0,0]\r\n})\r\n\r\nexport default k","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\t// TODO: use range of [0, 360] [0, 100] [0, 100]?\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\ttoHSL(): [number, number, number] {\n\t\tconst r = this.r / 255\n\t\tconst g = this.g / 255\n\t\tconst b = this.b / 255\n\t\tconst max = Math.max(r, g, b), min = Math.min(r, g, b)\n\t\tlet h = (max + min) / 2\n\t\tlet s = h\n\t\tconst l = h\n\t\tif (max == min) {\n\t\t\th = s = 0\n\t\t} else {\n\t\t\tconst d = max - min\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break\n\t\t\t\tcase g: h = (b - r) / d + 2; break\n\t\t\t\tcase b: h = (r - g) / d + 4; break\n\t\t\t}\n\t\t\th /= 6\n\t\t}\n\t\treturn [ h, s, l ]\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = (t) => -Math.cos(t)): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T = RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\n// TODO: use x: number y: number (x, y, width, height)\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n","export class Registry<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: Registry<(...args: Args) => void> = new Registry()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n\tclear() {\n\t\tthis.handlers.clear()\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tif (o1 === o2) {\n\t\treturn true\n\t}\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tif (Array.isArray(o1) !== Array.isArray(o2)) {\n\t\t\treturn false\n\t\t}\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn false\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\ntype Func = (...args: any[]) => any\n\nexport function overload2<A extends Func, B extends Func>(fn1: A, fn2: B): A & B {\n\treturn ((...args) => {\n\t\tconst al = args.length\n\t\tif (al === fn1.length) return fn1(...args)\n\t\tif (al === fn2.length) return fn2(...args)\n\t}) as A & B\n}\n\nexport function overload3<\n\tA extends Func,\n\tB extends Func,\n\tC extends Func,\n>(fn1: A, fn2: B, fn3: C): A & B & C {\n\treturn ((...args) => {\n\t\tconst al = args.length\n\t\tif (al === fn1.length) return fn1(...args)\n\t\tif (al === fn2.length) return fn2(...args)\n\t\tif (al === fn3.length) return fn3(...args)\n\t}) as A & B & C\n}\n\nexport function overload4<\n\tA extends Func,\n\tB extends Func,\n\tC extends Func,\n\tD extends Func,\n>(fn1: A, fn2: B, fn3: C, fn4: D): A & B & C & D {\n\treturn ((...args) => {\n\t\tconst al = args.length\n\t\tif (al === fn1.length) return fn1(...args)\n\t\tif (al === fn2.length) return fn2(...args)\n\t\tif (al === fn3.length) return fn3(...args)\n\t\tif (al === fn4.length) return fn4(...args)\n\t}) as A & B & C & D\n}\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nexport const getErrorMessage = (error: unknown) =>\n\t(error instanceof Error) ? error.message : String(error)\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n\nconst enum EnumRunesCode {\n\tHIGH_SURROGATE_START = 0xd800,\n\tHIGH_SURROGATE_END = 0xdbff,\n\n\tLOW_SURROGATE_START = 0xdc00,\n\n\tREGIONAL_INDICATOR_START = 0x1f1e6,\n\tREGIONAL_INDICATOR_END = 0x1f1ff,\n\n\tFITZPATRICK_MODIFIER_START = 0x1f3fb,\n\tFITZPATRICK_MODIFIER_END = 0x1f3ff,\n\n\tVARIATION_MODIFIER_START = 0xfe00,\n\tVARIATION_MODIFIER_END = 0xfe0f,\n\n\tDIACRITICAL_MARKS_START = 0x20d0,\n\tDIACRITICAL_MARKS_END = 0x20ff,\n\n\tSUBDIVISION_INDICATOR_START = 0x1f3f4,\n\tTAGS_START = 0xe0000,\n\tTAGS_END = 0xe007f,\n\n\tZWJ = 0x200d,\n}\n\nconst GRAPHEMES = Object.freeze([\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\n])\n\nenum EnumCodeUnits {\n\tunit_1 = 1,\n\tunit_2 = 2,\n\tunit_4 = 4,\n}\n\nexport function runes(string: string): string[] {\n\tif (typeof string !== \"string\") {\n\t\tthrow new TypeError(\"string cannot be undefined or null\")\n\t}\n\tconst result: string[] = []\n\tlet i = 0\n\tlet increment = 0\n\twhile (i < string.length) {\n\t\tincrement += nextUnits(i + increment, string)\n\t\tif (isGrapheme(string[i + increment])) {\n\t\t\tincrement++\n\t\t}\n\t\tif (isVariationSelector(string[i + increment])) {\n\t\t\tincrement++\n\t\t}\n\t\tif (isDiacriticalMark(string[i + increment])) {\n\t\t\tincrement++\n\t\t}\n\t\tif (isZeroWidthJoiner(string[i + increment])) {\n\t\t\tincrement++\n\t\t\tcontinue\n\t\t}\n\t\tresult.push(string.substring(i, i + increment))\n\t\ti += increment\n\t\tincrement = 0\n\t}\n\treturn result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\n// Subdivision flags: 14 code units (7 code points)\nfunction nextUnits(i: number, string: string) {\n\tconst current = string[i]\n\t// If we don't have a value that is part of a surrogate pair, or we're at\n\t// the end, only take the value at i\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1) {\n\t\treturn EnumCodeUnits.unit_1\n\t}\n\n\tconst currentPair = current + string[i + 1]\n\tconst nextPair = string.substring(i + 2, i + 5)\n\n\t// Country flags are comprised of two regional indicator symbols,\n\t// each represented by a surrogate pair.\n\t// See http://emojipedia.org/flags/\n\t// If both pairs are regional indicator symbols, take 4\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair)) {\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\n\t// https://unicode.org/emoji/charts/full-emoji-list.html#subdivision-flag\n\t// See https://emojipedia.org/emoji-tag-sequence/\n\t// If nextPair is in Tags(https://en.wikipedia.org/wiki/Tags_(Unicode_block)),\n\t// then find next closest U+E007F(CANCEL TAG)\n\tif (isSubdivisionFlag(currentPair) &&\tisSupplementarySpecialpurposePlane(nextPair)) {\n\t\treturn string.slice(i).indexOf(String.fromCodePoint(EnumRunesCode.TAGS_END)) + 2\n\t}\n\n\t// If the next pair make a Fitzpatrick skin tone\n\t// modifier, take 4\n\t// See http://emojipedia.org/modifiers/\n\t// Technically, only some code points are meant to be\n\t// combined with the skin tone modifiers. This function\n\t// does not check the current pair to see if it is\n\t// one of them.\n\tif (isFitzpatrickModifier(nextPair)) {\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\treturn EnumCodeUnits.unit_2\n}\n\nfunction isFirstOfSurrogatePair(string: string) {\n\treturn string && betweenInclusive(string[0].charCodeAt(0), EnumRunesCode.HIGH_SURROGATE_START, EnumRunesCode.HIGH_SURROGATE_END)\n}\n\nfunction isRegionalIndicator(string: string) {\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.REGIONAL_INDICATOR_START, EnumRunesCode.REGIONAL_INDICATOR_END)\n}\n\nfunction isSubdivisionFlag(string: string) {\n\treturn betweenInclusive(codePointFromSurrogatePair(string),\tEnumRunesCode.SUBDIVISION_INDICATOR_START, EnumRunesCode.SUBDIVISION_INDICATOR_START)\n}\n\nfunction isFitzpatrickModifier(string: string) {\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.FITZPATRICK_MODIFIER_START, EnumRunesCode.FITZPATRICK_MODIFIER_END)\n}\n\nfunction isVariationSelector(string: string) {\n\treturn typeof string === \"string\" && betweenInclusive(string.charCodeAt(0), EnumRunesCode.VARIATION_MODIFIER_START, EnumRunesCode.VARIATION_MODIFIER_END)\n}\n\nfunction isDiacriticalMark(string: string) {\n\treturn typeof string === \"string\" && betweenInclusive(string.charCodeAt(0), EnumRunesCode.DIACRITICAL_MARKS_START, EnumRunesCode.DIACRITICAL_MARKS_END)\n}\n\nfunction isSupplementarySpecialpurposePlane(string: string) {\n\tconst codePoint = string.codePointAt(0)\n\treturn (typeof string === \"string\" &&\ttypeof codePoint === \"number\" && betweenInclusive(codePoint, EnumRunesCode.TAGS_START, EnumRunesCode.TAGS_END))\n}\n\nfunction isGrapheme(string: string) {\n\treturn typeof string === \"string\" && GRAPHEMES.includes(string.charCodeAt(0))\n}\n\nfunction isZeroWidthJoiner(string: string) {\n\treturn typeof string === \"string\" && string.charCodeAt(0) === EnumRunesCode.ZWJ\n}\n\nfunction codePointFromSurrogatePair(pair: string) {\n\tconst highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START\n\tconst lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START\n\treturn (highOffset << 10) + lowOffset + 0x10000\n}\n\nfunction betweenInclusive(value: number, lower: number, upper: number) {\n\treturn value >= lower && value <= upper\n}\n\nexport function substring(string: string, start?: number, width?: number) {\n\tconst chars = runes(string)\n\tif (start === undefined) {\n\t\treturn string\n\t}\n\tif (start >= chars.length) {\n\t\treturn \"\"\n\t}\n\tconst rest = chars.length - start\n\tconst stringWidth = width === undefined ? rest : width\n\tlet endIndex = start + stringWidth\n\tif (endIndex > (start + rest)) {\n\t\tendIndex = undefined\n\t}\n\treturn chars.slice(start, endIndex).join(\"\")\n}\n","{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n","// everything related to canvas, game loop and input\n\nimport type {\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n\tmap,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n\toverload2,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\thide: [],\n\t\t\tshow: [],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: allow background actions?\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyDown\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t})\n\n\tconst onKeyPress = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPress\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t})\n\n\tconst onKeyPressRepeat = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPressRepeat\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t})\n\n\tconst onKeyRelease = overload2((action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyRelease\", action)\n\t}, (key: Key, action: (key: Key) => void) => {\n\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t})\n\n\tconst onMouseDown = overload2((action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseDown\", (m) => action(m))\n\t}, (mouse: MouseButton, action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t})\n\n\tconst onMousePress = overload2((action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mousePress\", (m) => action(m))\n\t}, (mouse: MouseButton, action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t})\n\n\tconst onMouseRelease = overload2((action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseRelease\", (m) => action(m))\n\t}, (mouse: MouseButton, action: (m: MouseButton) => void) => {\n\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t})\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onHide(action: () => void): EventController {\n\t\treturn state.events.on(\"hide\", action)\n\t}\n\n\tfunction onShow(action: () => void): EventController {\n\t\treturn state.events.on(\"show\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tconst pd = opt.pixelDensity || window.devicePixelRatio || 1\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tif (isFullscreen()) {\n\t\t\tconst cw = state.canvas.width / pd\n\t\t\tconst ch = state.canvas.height / pd\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst ratio = wh / ch\n\t\t\t\tconst offset = (ww - (cw * ratio)) / 2\n\t\t\t\tmousePos.x = map(e.offsetX - offset, 0, cw * ratio, 0, cw)\n\t\t\t\tmousePos.y = map(e.offsetY, 0, ch * ratio, 0, ch)\n\t\t\t} else {\n\t\t\t\tconst ratio = ww / cw\n\t\t\t\tconst offset = (wh - (ch * ratio)) / 2\n\t\t\t\tmousePos.x = map(e.offsetX , 0, cw * ratio, 0, cw)\n\t\t\t\tmousePos.y = map(e.offsetY - offset, 0, ch * ratio, 0, ch)\n\t\t\t}\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\t// TODO: handle all touches at once instead of sequentially\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchMove\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t\tstate.events.trigger(\"show\")\n\t\t} else {\n\t\t\tstate.events.trigger(\"hide\")\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonHide,\n\t\tonShow,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t}\n\n}\n","import type {\n\tImageSource,\n\tTextureOpt,\n\tTexFilter,\n\tUniform,\n} from \"./types\"\n\nimport {\n\tMat4,\n\tVec2,\n\tColor,\n} from \"./math\"\n\nimport {\n\tdeepEq,\n} from \"./utils\"\n\nexport type GfxCtx = ReturnType<typeof initGfx>\n\nexport class Texture {\n\n\tctx: GfxCtx\n\tsrc: null | ImageSource = null\n\tglTex: WebGLTexture\n\twidth: number\n\theight: number\n\n\tconstructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n\n\t\tthis.ctx = ctx\n\t\tconst gl = ctx.gl\n\t\tthis.glTex = ctx.gl.createTexture()\n\t\tctx.onDestroy(() => this.free())\n\n\t\tthis.width = w\n\t\tthis.height = h\n\n\t\t// TODO: no default\n\t\tconst filter = {\n\t\t\t\"linear\": gl.LINEAR,\n\t\t\t\"nearest\": gl.NEAREST,\n\t\t}[opt.filter ?? ctx.opts.texFilter] ?? gl.NEAREST\n\n\t\tconst wrap = {\n\t\t\t\"repeat\": gl.REPEAT,\n\t\t\t\"clampToEadge\": gl.CLAMP_TO_EDGE,\n\t\t}[opt.wrap] ?? gl.CLAMP_TO_EDGE\n\n\t\tthis.bind()\n\n\t\tif (w && h) {\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t0, gl.RGBA,\n\t\t\t\tw,\n\t\t\t\th,\n\t\t\t\t0,\n\t\t\t\tgl.RGBA,\n\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\tnull,\n\t\t\t)\n\t\t}\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\tthis.unbind()\n\n\t}\n\n\tstatic fromImage(ctx: GfxCtx, img: ImageSource, opt: TextureOpt = {}): Texture {\n\t\tconst tex = new Texture(ctx, img.width, img.height, opt)\n\t\ttex.update(img)\n\t\ttex.src = img\n\t\treturn tex\n\t}\n\n\tupdate(img: ImageSource, x = 0, y = 0) {\n\t\tconst gl = this.ctx.gl\n\t\tthis.bind()\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\tthis.unbind()\n\t}\n\n\tbind() {\n\t\tthis.ctx.pushTexture2D(this.glTex)\n\t}\n\n\tunbind() {\n\t\tthis.ctx.popTexture2D()\n\t}\n\n\tfree() {\n\t\tthis.ctx.gl.deleteTexture(this.glTex)\n\t}\n\n}\n\nexport class FrameBuffer {\n\n\tctx: GfxCtx\n\ttex: Texture\n\tglFramebuffer: WebGLFramebuffer\n\tglRenderbuffer: WebGLRenderbuffer\n\n\tconstructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n\n\t\tthis.ctx = ctx\n\t\tconst gl = ctx.gl\n\t\tctx.onDestroy(() => this.free())\n\t\tthis.tex = new Texture(ctx, w, h, opt)\n\t\tthis.glFramebuffer = gl.createFramebuffer()\n\t\tthis.glRenderbuffer = gl.createRenderbuffer()\n\t\tthis.bind()\n\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\tgl.framebufferTexture2D(\n\t\t\tgl.FRAMEBUFFER,\n\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\tgl.TEXTURE_2D,\n\t\t\tthis.tex.glTex,\n\t\t\t0,\n\t\t)\n\t\tgl.framebufferRenderbuffer(\n\t\t\tgl.FRAMEBUFFER,\n\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl.RENDERBUFFER,\n\t\t\tthis.glRenderbuffer,\n\t\t)\n\t\tthis.unbind()\n\t}\n\n\tget width() {\n\t\treturn this.tex.width\n\t}\n\n\tget height() {\n\t\treturn this.tex.height\n\t}\n\n\ttoImageData() {\n\t\tconst gl = this.ctx.gl\n\t\tconst data = new Uint8ClampedArray(this.width * this.height * 4)\n\t\tthis.bind()\n\t\tgl.readPixels(0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, data)\n\t\tthis.unbind()\n\t\t// flip vertically\n\t\tconst bytesPerRow = this.width * 4\n\t\tconst temp = new Uint8Array(bytesPerRow)\n\t\tfor (let y = 0; y < (this.height / 2 | 0); y++) {\n\t\t\tconst topOffset = y * bytesPerRow\n\t\t\tconst bottomOffset = (this.height - y - 1) * bytesPerRow\n\t\t\ttemp.set(data.subarray(topOffset, topOffset + bytesPerRow))\n\t\t\tdata.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow)\n\t\t\tdata.set(temp, bottomOffset)\n\t\t}\n\t\treturn new ImageData(data, this.width, this.height)\n\t}\n\n\ttoDataURL() {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\tcanvas.width = this.width\n\t\tcanvas.height = this.height\n\t\tctx.putImageData(this.toImageData(), 0, 0)\n\t\treturn canvas.toDataURL()\n\t}\n\n\tdraw(action: () => void) {\n\t\tthis.bind()\n\t\taction()\n\t\tthis.unbind()\n\t}\n\n\tbind() {\n\t\tthis.ctx.pushFramebuffer(this.glFramebuffer)\n\t\tthis.ctx.pushRenderbuffer(this.glRenderbuffer)\n\t\tthis.ctx.pushViewport({ x: 0, y: 0, w: this.width, h: this.height })\n\t}\n\n\tunbind() {\n\t\tthis.ctx.popFramebuffer()\n\t\tthis.ctx.popRenderbuffer()\n\t\tthis.ctx.popViewport()\n\t}\n\n\tfree() {\n\t\tconst gl = this.ctx.gl\n\t\tgl.deleteFramebuffer(this.glFramebuffer)\n\t\tgl.deleteRenderbuffer(this.glRenderbuffer)\n\t\tthis.tex.free()\n\t}\n\n}\n\nexport class Shader {\n\n\tctx: GfxCtx\n\tglProgram: WebGLProgram\n\n\tconstructor(ctx: GfxCtx, vert: string, frag: string, attribs: string[]) {\n\n\t\tthis.ctx = ctx\n\t\tctx.onDestroy(() => this.free())\n\n\t\tconst gl = ctx.gl\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vert)\n\t\tgl.shaderSource(fragShader, frag)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\t\tthis.glProgram = prog\n\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tattribs.forEach((attrib, i) => gl.bindAttribLocation(prog, i, attrib))\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tif (vertError) throw new Error(\"VERTEX SHADER \" + vertError)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tif (fragError) throw new Error(\"FRAGMENT SHADER \" + fragError)\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t}\n\n\tbind() {\n\t\tthis.ctx.pushProgram(this.glProgram)\n\t}\n\n\tunbind() {\n\t\tthis.ctx.popProgram()\n\t}\n\n\tsend(uniform: Uniform) {\n\t\tconst gl = this.ctx.gl\n\t\tfor (const name in uniform) {\n\t\t\tconst val = uniform[name]\n\t\t\tconst loc = gl.getUniformLocation(this.glProgram, name)\n\t\t\tif (typeof val === \"number\") {\n\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t} else if (val instanceof Color) {\n\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t}\n\t\t}\n\t}\n\n\tfree() {\n\t\tthis.ctx.gl.deleteProgram(this.glProgram)\n\t}\n\n}\n\nexport type VertexFormat = {\n\tname: string,\n\tsize: number,\n}[]\n\nexport class BatchRenderer {\n\n\tctx: GfxCtx\n\n\tglVBuf: WebGLBuffer\n\tglIBuf: WebGLBuffer\n\tvqueue: number[] = []\n\tiqueue: number[] = []\n\tstride: number\n\tmaxVertices: number\n\tmaxIndices: number\n\n\tvertexFormat: VertexFormat\n\tnumDraws: number = 0\n\n\tcurPrimitive: GLenum | null = null\n\tcurTex: Texture | null = null\n\tcurShader: Shader | null = null\n\tcurUniform: Uniform = {}\n\n\tconstructor(ctx: GfxCtx, format: VertexFormat, maxVertices: number, maxIndices: number) {\n\n\t\tconst gl = ctx.gl\n\n\t\tthis.vertexFormat = format\n\t\tthis.ctx = ctx\n\t\tthis.stride = format.reduce((sum, f) => sum + f.size, 0)\n\t\tthis.maxVertices = maxVertices\n\t\tthis.maxIndices = maxIndices\n\n\t\tthis.glVBuf = gl.createBuffer()\n\t\tctx.pushArrayBuffer(this.glVBuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, maxVertices * 4, gl.DYNAMIC_DRAW)\n\t\tctx.popArrayBuffer()\n\n\t\tthis.glIBuf = gl.createBuffer()\n\t\tctx.pushElementArrayBuffer(this.glIBuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, maxIndices * 4, gl.DYNAMIC_DRAW)\n\t\tctx.popElementArrayBuffer()\n\n\t}\n\n\tpush(\n\t\tprimitive: GLenum,\n\t\tverts: number[],\n\t\tindices: number[],\n\t\tshader: Shader,\n\t\ttex: Texture | null = null,\n\t\tuniform: Uniform = {},\n\t) {\n\t\tif (\n\t\t\tprimitive !== this.curPrimitive\n\t\t\t|| tex !== this.curTex\n\t\t\t|| shader !== this.curShader\n\t\t\t|| !deepEq(this.curUniform, uniform)\n\t\t\t|| this.vqueue.length + verts.length * this.stride > this.maxVertices\n\t\t\t|| this.iqueue.length + indices.length > this.maxIndices\n\t\t) {\n\t\t\tthis.flush()\n\t\t}\n\t\tconst indexOffset = this.vqueue.length / this.stride\n\t\tfor (const v of verts) {\n\t\t\tthis.vqueue.push(v)\n\t\t}\n\t\tfor (const i of indices) {\n\t\t\tthis.iqueue.push(i + indexOffset)\n\t\t}\n\t\tthis.curPrimitive = primitive\n\t\tthis.curShader = shader\n\t\tthis.curTex = tex\n\t\tthis.curUniform = uniform\n\t}\n\n\tflush() {\n\n\t\tif (\n\t\t\t!this.curPrimitive\n\t\t\t|| !this.curShader\n\t\t\t|| this.vqueue.length === 0\n\t\t\t|| this.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tconst gl = this.ctx.gl\n\n\t\tthis.ctx.pushArrayBuffer(this.glVBuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(this.vqueue))\n\t\tthis.ctx.pushElementArrayBuffer(this.glIBuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(this.iqueue))\n\t\tthis.ctx.setVertexFormat(this.vertexFormat)\n\t\tthis.curShader.bind()\n\t\tthis.curShader.send(this.curUniform)\n\t\tthis.curTex?.bind()\n\t\tgl.drawElements(this.curPrimitive, this.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tthis.curTex?.unbind()\n\t\tthis.curShader.unbind()\n\n\t\tthis.ctx.popArrayBuffer()\n\t\tthis.ctx.popElementArrayBuffer()\n\n\t\tthis.vqueue = []\n\t\tthis.iqueue = []\n\t\tthis.numDraws++\n\n\t}\n\n\tfree() {\n\t\tconst gl = this.ctx.gl\n\t\tgl.deleteBuffer(this.glVBuf)\n\t\tgl.deleteBuffer(this.glIBuf)\n\t}\n\n}\n\nexport class Mesh {\n\n\tctx: GfxCtx\n\tglVBuf: WebGLBuffer\n\tglIBuf: WebGLBuffer\n\tvertexFormat: VertexFormat\n\tcount: number\n\n\tconstructor(ctx: GfxCtx, format: VertexFormat, verts: number[], indices: number[]) {\n\n\t\tconst gl = ctx.gl\n\n\t\tthis.vertexFormat = format\n\t\tthis.ctx = ctx\n\n\t\tthis.glVBuf = gl.createBuffer()\n\t\tctx.pushArrayBuffer(this.glVBuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW)\n\t\tctx.popArrayBuffer()\n\n\t\tthis.glIBuf = gl.createBuffer()\n\t\tctx.pushElementArrayBuffer(this.glIBuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\n\t\tctx.popElementArrayBuffer()\n\n\t\tthis.count = indices.length\n\n\t}\n\n\tdraw(primitive?: GLenum) {\n\t\tconst gl = this.ctx.gl\n\t\tthis.ctx.pushArrayBuffer(this.glVBuf)\n\t\tthis.ctx.pushElementArrayBuffer(this.glIBuf)\n\t\tthis.ctx.setVertexFormat(this.vertexFormat)\n\t\tgl.drawElements(primitive ?? gl.TRIANGLES, this.count, gl.UNSIGNED_SHORT, 0)\n\t\tthis.ctx.popArrayBuffer()\n\t\tthis.ctx.popElementArrayBuffer()\n\t}\n\n\tfree() {\n\t\tconst gl = this.ctx.gl\n\t\tgl.deleteBuffer(this.glVBuf)\n\t\tgl.deleteBuffer(this.glIBuf)\n\t}\n\n\n}\n\nfunction genStack<T>(setFunc: (item: T) => void) {\n\tconst stack: T[] = []\n\tconst push = (item: T) => {\n\t\tstack.push(item)\n\t\tsetFunc(item)\n\t}\n\tconst pop = () => {\n\t\tstack.pop()\n\t\tsetFunc(cur() ?? null)\n\t}\n\tconst cur = () => stack[stack.length - 1]\n\treturn [push, pop, cur] as const\n}\n\nexport default function initGfx(gl: WebGLRenderingContext, opts: {\n\ttexFilter?: TexFilter,\n} = {}) {\n\n\tconst gc: Array<() => void> = []\n\n\tfunction onDestroy(action) {\n\t\tgc.push(action)\n\t}\n\n\tfunction destroy() {\n\t\tgc.forEach((action) => action())\n\t\tgl.getExtension(\"WEBGL_lose_context\").loseContext()\n\t}\n\n\tlet curVertexFormat = null\n\n\tfunction setVertexFormat(fmt: VertexFormat) {\n\t\tif (deepEq(fmt, curVertexFormat)) return\n\t\tcurVertexFormat = fmt\n\t\tconst stride = fmt.reduce((sum, f) => sum + f.size, 0)\n\t\tfmt.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, stride * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\t}\n\n\tconst [ pushTexture2D, popTexture2D ] =\n\t\tgenStack<WebGLTexture>((t) => gl.bindTexture(gl.TEXTURE_2D, t))\n\n\tconst [ pushArrayBuffer, popArrayBuffer ] =\n\t\tgenStack<WebGLBuffer>((b) => gl.bindBuffer(gl.ARRAY_BUFFER, b))\n\n\tconst [ pushElementArrayBuffer, popElementArrayBuffer ] =\n\t\tgenStack<WebGLBuffer>((b) => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b))\n\n\tconst [ pushFramebuffer, popFramebuffer ] =\n\t\tgenStack<WebGLFramebuffer>((b) => gl.bindFramebuffer(gl.FRAMEBUFFER, b))\n\n\tconst [ pushRenderbuffer, popRenderbuffer ] =\n\t\tgenStack<WebGLRenderbuffer>((b) => gl.bindRenderbuffer(gl.RENDERBUFFER, b))\n\n\tconst [ pushViewport, popViewport ] =\n\t\tgenStack<{ x: number, y: number, w: number, h: number }>(({ x, y, w, h }) => {\n\t\t\tgl.viewport(x, y, w, h)\n\t\t})\n\n\tconst [ pushProgram, popProgram ] = genStack<WebGLProgram>((p) => gl.useProgram(p))\n\n\tpushViewport({ x: 0, y: 0, w: gl.drawingBufferWidth, h: gl.drawingBufferHeight })\n\n\treturn {\n\t\tgl,\n\t\topts,\n\t\tonDestroy,\n\t\tdestroy,\n\t\tpushTexture2D,\n\t\tpopTexture2D,\n\t\tpushArrayBuffer,\n\t\tpopArrayBuffer,\n\t\tpushElementArrayBuffer,\n\t\tpopElementArrayBuffer,\n\t\tpushFramebuffer,\n\t\tpopFramebuffer,\n\t\tpushRenderbuffer,\n\t\tpopRenderbuffer,\n\t\tpushViewport,\n\t\tpopViewport,\n\t\tpushProgram,\n\t\tpopProgram,\n\t\tsetVertexFormat,\n\t}\n\n}\n","import {\n\tEvent,\n\tisDataURL,\n} from \"./utils\"\n\nexport class Asset<D> {\n\tloaded: boolean = false\n\tdata: D | null = null\n\terror: Error | null = null\n\tprivate onLoadEvents: Event<[D]> = new Event()\n\tprivate onErrorEvents: Event<[Error]> = new Event()\n\tprivate onFinishEvents: Event<[]> = new Event()\n\tconstructor(loader: Promise<D>) {\n\t\tloader.then((data) => {\n\t\t\tthis.data = data\n\t\t\tthis.onLoadEvents.trigger(data)\n\t\t}).catch((err) => {\n\t\t\tthis.error = err\n\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t} else {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tthis.onFinishEvents.trigger()\n\t\t\tthis.loaded = true\n\t\t})\n\t}\n\tstatic loaded<D>(data: D): Asset<D> {\n\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\tasset.data = data\n\t\tasset.loaded = true\n\t\treturn asset\n\t}\n\tonLoad(action: (data: D) => void) {\n\t\tif (this.loaded && this.data) {\n\t\t\taction(this.data)\n\t\t} else {\n\t\t\tthis.onLoadEvents.add(action)\n\t\t}\n\t\treturn this\n\t}\n\tonError(action: (err: Error) => void) {\n\t\tif (this.loaded && this.error) {\n\t\t\taction(this.error)\n\t\t} else {\n\t\t\tthis.onErrorEvents.add(action)\n\t\t}\n\t\treturn this\n\t}\n\tonFinish(action: () => void) {\n\t\tif (this.loaded) {\n\t\t\taction()\n\t\t} else {\n\t\t\tthis.onFinishEvents.add(action)\n\t\t}\n\t\treturn this\n\t}\n\tthen(action: (data: D) => void): Asset<D> {\n\t\treturn this.onLoad(action)\n\t}\n\tcatch(action: (err: Error) => void): Asset<D> {\n\t\treturn this.onError(action)\n\t}\n\tfinally(action: () => void): Asset<D> {\n\t\treturn this.onFinish(action)\n\t}\n}\n\nexport class AssetBucket<D> {\n\tassets: Map<string, Asset<D>> = new Map()\n\tlastUID: number = 0\n\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t// if user don't provide a name we use a generated one\n\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\tconst asset = new Asset(loader)\n\t\tthis.assets.set(id, asset)\n\t\treturn asset\n\t}\n\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\tconst asset = Asset.loaded(data)\n\t\tthis.assets.set(id, asset)\n\t\treturn asset\n\t}\n\tget(handle: string): Asset<D> | void {\n\t\treturn this.assets.get(handle)\n\t}\n\tprogress(): number {\n\t\tif (this.assets.size === 0) {\n\t\t\treturn 1\n\t\t}\n\t\tlet loaded = 0\n\t\tthis.assets.forEach((asset) => {\n\t\t\tif (asset.loaded) {\n\t\t\t\tloaded++\n\t\t\t}\n\t\t})\n\t\treturn loaded / this.assets.size\n\t}\n}\n\nexport default () => {\n\n\tconst state = {\n\t\turlPrefix: \"\",\n\t\tloaded: false,\n\t}\n\n\tfunction setURLPrefix(prefix: string) {\n\t\tstate.urlPrefix = prefix\n\t}\n\n\tfunction getURLPrefix() {\n\t\treturn state.urlPrefix\n\t}\n\n\tfunction fetchURL(path: string) {\n\t\tconst url = state.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new Error(`Failed to fetch \"${url}\"`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : state.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\treturn {\n\t\tsetURLPrefix,\n\t\tgetURLPrefix,\n\t\tloadImg,\n\t\tfetchURL,\n\t\tfetchJSON,\n\t\tfetchText,\n\t\tfetchArrayBuffer,\n\t}\n\n}\n","// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n","import type {\n\tImageSource,\n} from \"./types\"\n\nimport {\n\tGfxCtx,\n\tTexture,\n} from \"./gfx\"\n\nimport {\n\tVec2,\n\tQuad,\n} from \"./math\"\n\nexport default class TexPacker {\n\tprivate textures: Texture[] = []\n\tprivate canvas: HTMLCanvasElement\n\tprivate c2d: CanvasRenderingContext2D\n\tprivate x: number = 0\n\tprivate y: number = 0\n\tprivate curHeight: number = 0\n\tprivate gfx: GfxCtx\n\tconstructor(gfx: GfxCtx, w: number, h: number) {\n\t\tthis.gfx = gfx\n\t\tthis.canvas = document.createElement(\"canvas\")\n\t\tthis.canvas.width = w\n\t\tthis.canvas.height = h\n\t\tthis.textures = [Texture.fromImage(gfx, this.canvas)]\n\t\tthis.c2d = this.canvas.getContext(\"2d\")\n\t}\n\tadd(img: ImageSource): [Texture, Quad] {\n\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t}\n\t\t// next row\n\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\tthis.x = 0\n\t\t\tthis.y += this.curHeight\n\t\t\tthis.curHeight = 0\n\t\t}\n\t\t// next texture\n\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\tthis.c2d.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\tthis.textures.push(Texture.fromImage(this.gfx, this.canvas))\n\t\t\tthis.x = 0\n\t\t\tthis.y = 0\n\t\t\tthis.curHeight = 0\n\t\t}\n\t\tconst curTex = this.textures[this.textures.length - 1]\n\t\tconst pos = new Vec2(this.x, this.y)\n\t\tthis.x += img.width\n\t\tif (img.height > this.curHeight) {\n\t\t\tthis.curHeight = img.height\n\t\t}\n\t\tif (img instanceof ImageData) {\n\t\t\tthis.c2d.putImageData(img, pos.x, pos.y)\n\t\t} else {\n\t\t\tthis.c2d.drawImage(img, pos.x, pos.y)\n\t\t}\n\t\tcurTex.update(this.canvas)\n\t\treturn [curTex, new Quad(\n\t\t\tpos.x / this.canvas.width,\n\t\t\tpos.y / this.canvas.height,\n\t\t\timg.width / this.canvas.width,\n\t\t\timg.height / this.canvas.height,\n\t\t)]\n\t}\n\tfree() {\n\t\tfor (const tex of this.textures) {\n\t\t\ttex.free()\n\t\t}\n\t}\n}\n","const VERSION = \"3000.1.14\"\n\nimport initApp from \"./app\"\nimport initGfx, {\n\tTexture,\n\tFrameBuffer,\n\tShader,\n\tBatchRenderer,\n} from \"./gfx\"\n\nimport initAssets, {\n\tAsset,\n\tAssetBucket,\n} from \"./assets\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\nimport TexPacker from \"./texPacker\"\n\nimport {\n\tRegistry,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\toverload2,\n\tdataURLToArrayBuffer,\n\tEventController,\n\tgetErrorMessage,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n\trunes,\n} from \"./utils\"\n\nimport type {\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tImageSource,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleCompOpt,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tEmptyComp,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n\tMaskComp,\n\tMask,\n\tOutline,\n\tPolygonComp,\n\tPolygonCompOpt,\n} from \"./types\"\n\nimport beanSpriteSrc from \"./assets/bean.png\"\nimport burpSoundSrc from \"./assets/burp.mp3\"\nimport kaSpriteSrc from \"./assets/ka.png\"\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 32\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"linear\"\n\nconst LOG_MAX = 8\nconst LOG_TIME = 4\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tconst cw = canvas.width\n\t\tconst ch = canvas.height\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheC2d = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tconst ggl = initGfx(gl, {\n\t\ttexFilter: gopt.texFilter,\n\t})\n\n\tconst ass = initAssets()\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tggl,\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(ggl, gopt.width * pixelDensity * gscale, gopt.height * pixelDensity * gscale)\n\t\t\t: new FrameBuffer(ggl, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\tconst renderer = new BatchRenderer(ggl, VERTEX_FORMAT, MAX_BATCHED_VERTS, MAX_BATCHED_INDICES)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tggl,\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\trenderer: renderer,\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t\tfixed: false,\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width * this.frames[0].w\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height * this.frames[0].h\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: ImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn ass.loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn ass.fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tconst assets = {\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(ggl, SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\tgame.root.use(timer())\n\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tass.setURLPrefix(path)\n\t\t}\n\t\treturn ass.getURLPrefix()\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, ass.fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\tfilter: TexFilter = DEF_FONT_FILTER\n\t\toutline: Outline | null = null\n\t\tsize: number = DEF_TEXT_CACHE_SIZE\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t\tthis.size = opt.size ?? DEF_TEXT_CACHE_SIZE\n\t\t\tif (this.size > MAX_TEXT_CACHE_SIZE) {\n\t\t\t\tthrow new Error(`Max font size: ${MAX_TEXT_CACHE_SIZE}`)\n\t\t\t}\n\t\t\tif (opt.outline) {\n\t\t\t\tthis.outline = {\n\t\t\t\t\twidth: 1,\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t}\n\t\t\t\tif (typeof opt.outline === \"number\") {\n\t\t\t\t\tthis.outline.width = opt.outline\n\t\t\t\t} else if (typeof opt.outline === \"object\") {\n\t\t\t\t\tif (opt.outline.width) this.outline.width = opt.outline.width\n\t\t\t\t\tif (opt.outline.color) this.outline.color = opt.outline.color\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | BinaryData,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, ass.loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(ggl, img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed ImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tass.fetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: ImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst c2d = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tc2d.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tc2d.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = c2d.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? ass.loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as ImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await ass.fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(ass.loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst c2d = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tc2d.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? ass.fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? ass.fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: method to completely destory audio?\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tstop() {\n\t\t\t\tthis.paused = true\n\t\t\t\tthis.seek(0)\n\t\t\t},\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeCanvas(w: number, h: number) {\n\t\treturn new FrameBuffer(ggl, w, h)\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): Shader {\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\ttry {\n\t\t\treturn new Shader(ggl, vcode, fcode, VERTEX_FORMAT.map((vert) => vert.name))\n\t\t} catch (e) {\n\t\t\tconst lineOffset = 14\n\t\t\tconst fmt = /(?<type>^\\w+) SHADER ERROR: 0:(?<line>\\d+): (?<msg>.+)/\n\t\t\tconst match = getErrorMessage(e).match(fmt)\n\t\t\tconst line = Number(match.groups.line) - lineOffset\n\t\t\tconst msg = match.groups.msg.trim()\n\t\t\tconst ty = match.groups.type.toLowerCase()\n\t\t\tthrow new Error(`${ty} shader line ${line}: ${msg}`)\n\t\t}\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\tconst transform = (gfx.fixed || fixed)\n\t\t\t? gfx.transform\n\t\t\t: game.cam.transform.mult(gfx.transform)\n\n\t\tconst vv = []\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tvv.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tgfx.renderer.push(gl.TRIANGLES, vv, indices, shader, tex, uniform)\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\t\tgfx.renderer.flush()\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.renderer.numDraws = 0\n\t\tgfx.fixed = false\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.lastDrawCalls = gfx.renderer.numDraws\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawTriangle() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (typeof opt.radius !== \"number\") {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ? opt.colors[i].mult(color) : color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color && fchar.ch.length === 1) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: Outline | null,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = runes(text)\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: {\n\t\t\t\toutline: Outline | null,\n\t\t\t\tfilter: TexFilter,\n\t\t\t} = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: null,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(ggl, FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheC2d\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline.width * 2\n\t\t\t\t\t\tc2d.strokeStyle = atlas.outline.color.toHex()\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline.width, atlas.outline.width)\n\t\t\t\t\t\tw += atlas.outline.width * 2\n\t\t\t\t\t\th += atlas.outline.width * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline?.width ?? 0, atlas.outline?.width ?? 0)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\tlet debugPaused = false\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.lastDrawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tgame.logs.unshift({\n\t\t\t\tmsg: msg,\n\t\t\t\ttime: app.time(),\n\t\t\t})\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tnumObjects: () => get(\"*\", { recursive: true }).length,\n\t\tget paused() {\n\t\t\treturn debugPaused\n\t\t},\n\t\tset paused(v) {\n\t\t\tdebugPaused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt() * debug.timeScale\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake += intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T> = []): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tconst inputEvents: EventController[] = []\n\t\tlet onCurCompCleanup = null\n\t\tlet paused = false\n\n\t\t// @ts-ignore\n\t\tconst obj: GameObj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tset paused(p) {\n\t\t\t\tif (p === paused) return\n\t\t\t\tpaused = p\n\t\t\t\tfor (const e of inputEvents) {\n\t\t\t\t\te.paused = p\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2> = []): GameObj<T2> {\n\t\t\t\tconst obj = Array.isArray(a) ? make(a) : a\n\t\t\t\tif (obj.parent) {\n\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t}\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\t// TODO: trigger add for children\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: recursive\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp | FixedComp | MaskComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tif (this.canvas) this.canvas.bind()\n\t\t\t\tconst f = gfx.fixed\n\t\t\t\tif (this.fixed) gfx.fixed = true\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tconst children = this.children.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tif (this.mask) {\n\t\t\t\t\tconst maskFunc = {\n\t\t\t\t\t\tintersect: drawMasked,\n\t\t\t\t\t\tsubtract: drawSubtracted,\n\t\t\t\t\t}[this.mask]\n\t\t\t\t\tif (!maskFunc) {\n\t\t\t\t\t\tthrow new Error(`Invalid mask func: \"${this.mask}\"`)\n\t\t\t\t\t}\n\t\t\t\t\tmaskFunc(() => {\n\t\t\t\t\t\tchildren.forEach((child) => child.draw())\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\t\tchildren.forEach((child) => child.draw())\n\t\t\t\t}\n\t\t\t\tpopTransform()\n\t\t\t\tgfx.fixed = f\n\t\t\t\tif (this.canvas) this.canvas.unbind()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\tconst events = []\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: clean up when obj destroyed\n\t\t\t\t\tevents.push(onAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t\t\tevents.push(onDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t\t\tthis.onDestroy(() => {\n\t\t\t\t\t\tfor (const ev of events) {\n\t\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\t// TODO: type with as const\n\t\tconst evs = [\n\t\t\t\"onKeyPress\",\n\t\t\t\"onKeyPressRepeat\",\n\t\t\t\"onKeyDown\",\n\t\t\t\"onKeyRelease\",\n\t\t\t\"onMousePress\",\n\t\t\t\"onMouseDown\",\n\t\t\t\"onMouseRelease\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onCharInput\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onTouchStart\",\n\t\t\t\"onTouchMove\",\n\t\t\t\"onTouchEnd\",\n\t\t\t\"onScroll\",\n\t\t\t\"onGamepadButtonPress\",\n\t\t\t\"onGamepadButtonDown\",\n\t\t\t\"onGamepadButtonRelease\",\n\t\t\t\"onGamepadStick\",\n\t\t]\n\n\t\tfor (const e of evs) {\n\t\t\tobj[e] = (...args) => {\n\t\t\t\tconst ev = app[e](...args)\n\t\t\t\tinputEvents.push(ev)\n\t\t\t\t// TODO: what if the game object is destroy and re-added\n\t\t\t\tobj.onDestroy(() => ev.cancel())\n\t\t\t\treturn ev\n\t\t\t}\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new Registry()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\tconst onUpdate = overload2((action: () => void): EventController => {\n\t\tconst obj = add([{ update: action }])\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn obj.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tobj.paused = p\n\t\t\t},\n\t\t\tcancel: () => obj.destroy(),\n\t\t}\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"update\", tag, action)\n\t})\n\n\tconst onDraw = overload2((action: () => void): EventController => {\n\t\tconst obj = add([{ draw: action }])\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn obj.hidden\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tobj.hidden = p\n\t\t\t},\n\t\t\tcancel: () => obj.destroy(),\n\t\t}\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"draw\", tag, action)\n\t})\n\n\tconst onAdd = overload2((action: (obj: GameObj) => void) => {\n\t\treturn game.events.on(\"add\", action)\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"add\", tag, action)\n\t})\n\n\tconst onDestroy = overload2((action: (obj: GameObj) => void) => {\n\t\treturn game.events.on(\"destroy\", action)\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\treturn on(\"destroy\", tag, action)\n\t})\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\tconst onClick = overload2((action: () => void) => {\n\t\treturn app.onMousePress(action)\n\t}, (tag: Tag, action: (obj: GameObj) => void) => {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t})\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\tconst pos = this.worldPos()\n\t\t\t\treturn isFixed(this)\n\t\t\t\t\t? pos\n\t\t\t\t\t: toScreen(pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): EmptyComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = this.screenPos()\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction isFixed(obj: GameObj) {\n\t\tif (obj.fixed) return true\n\t\treturn obj.parent ? isFixed(obj.parent) : false\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: isFixed(this),\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = isFixed(this) ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\t// TODO: perform check instead of use cache\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (isFixed(this)) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\t// 1  - from small index to large index\n\t\t// -1 - reverse\n\t\tlet curAnimDir: -1 | 1 | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q.scale(this.quad ?? new Quad(0, 0, 1, 1)),\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\tthis.frame += curAnimDir\n\n\t\t\t\t\tif (this.frame < Math.min(anim.from, anim.to) ||\n\t\t\t\t\t\tthis.frame > Math.max(anim.from, anim.to)) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tif (curAnim.pingpong) {\n\t\t\t\t\t\t\t\tthis.frame -= curAnimDir\n\t\t\t\t\t\t\t\tcurAnimDir *= -1\n\t\t\t\t\t\t\t\tthis.frame += curAnimDir\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame = anim.to\n\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tcurAnimDir = typeof anim === \"number\"\n\t\t\t\t\t? null\n\t\t\t\t\t: anim.from < anim.to ? 1 : -1\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\t// TODO: shouldn't run when object / ancestor is paused\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\tconst obj = {\n\n\t\t\tid: \"text\",\n\t\t\tset text(nt) {\n\t\t\t\tt = nt\n\t\t\t\t// @ts-ignore\n\t\t\t\tupdate(this)\n\t\t\t},\n\t\t\tget text() {\n\t\t\t\treturn t\n\t\t\t},\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width ?? 0,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t\t// @ts-ignore\n\t\tupdate(obj)\n\n\t\treturn obj\n\n\t}\n\n\tfunction polygon(pts: Vec2[], opt: PolygonCompOpt = {}): PolygonComp {\n\t\tif(pts.length < 3) throw new Error(`Polygon's need more than two points, ${pts.length} points provided`)\n\t\treturn {\n\t\t\tid: \"polygon\",\n\t\t\tpts,\n\t\t\tcolors: opt.colors,\n\t\t\tradius: opt.radius,\n\t\t\tdraw(this: GameObj<PolygonComp>) {\n\t\t\t\tdrawPolygon(Object.assign(getRenderProps(this), {\n\t\t\t\t\tpts: this.pts,\n\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<PolygonComp>) {\n\t\t\t\treturn new Polygon(this.pts)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn this.pts.map(p => `[${p.x},${p.y}]`).join(\",\")\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number, opt: CircleCompOpt = {}): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t// TODO: this prevents from falling when on edge\n\t\t\t\t\t\t!this.isColliding(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number, maxHP?: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tconst origHP = hp\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", hp - origHP)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tmaxHP(): number | null {\n\t\t\t\treturn maxHP ?? null\n\t\t\t},\n\t\t\tsetMaxHP(n: number): void {\n\t\t\t\tmaxHP = n\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = maxHP ? Math.min(maxHP, n) : n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction mask(m: Mask = \"intersect\"): MaskComp {\n\t\treturn {\n\t\t\tid: \"mask\",\n\t\t\tmask: m,\n\t\t}\n\t}\n\n\tfunction drawon(c: FrameBuffer) {\n\t\treturn {\n\t\t\tadd(this: GameObj) {\n\t\t\t\tthis.canvas = c\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\t\t\tinitEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T extends Record<string, any>>(plugin: KaboomPlugin<T>, ...args: any): KaboomCtx & T {\n\t\tconst funcs = plugin(ctx)\n\t\tlet funcsObj: T\n\t\tif (typeof funcs === \"function\") {\n\t\t\tconst plugWithOptions = funcs(...args)\n\t\t\tfuncsObj = plugWithOptions(ctx)\n\t\t}\n\t\telse {\n\t\t\tfuncsObj = funcs\n\t\t}\n\t\tfor (const k in funcsObj) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcsObj[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcsObj[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as KaboomCtx & T\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\t// TODO: custom parent\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add = game.root.add.bind(game.root)\n\tconst readd = game.root.readd.bind(game.root)\n\tconst destroyAll = game.root.removeAll.bind(game.root)\n\tconst get = game.root.get.bind(game.root)\n\tconst wait = game.root.wait.bind(game.root)\n\tconst loop = game.root.loop.bind(game.root)\n\tconst tween = game.root.tween.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (other.paused) continue\n\t\t\t\t\t\t\t\tif (!other.exists()) continue\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) continue\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\t\t\t\tconst logs = []\n\n\t\t\t\tfor (const log of game.logs) {\n\t\t\t\t\tlet str = \"\"\n\t\t\t\t\tconst style = log.msg instanceof Error ? \"error\" : \"info\"\n\t\t\t\t\tstr += `[time]${log.time.toFixed(2)}[/time]`\n\t\t\t\t\tstr += \" \"\n\t\t\t\t\tstr += `[${style}]${log.msg?.toString ? log.msg.toString() : log.msg}[/${style}]`\n\t\t\t\t\tlogs.push(str)\n\t\t\t\t}\n\n\t\t\t\tgame.logs = game.logs\n\t\t\t\t\t.filter((log) => app.time() - log.time < (gopt.logTime || LOG_TIME))\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\taudio.ctx.suspend()\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: \"Error\",\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tggl.destroy()\n\t\t\tgc.forEach((f) => f())\n\n\t\t})\n\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\ttry {\n\n\t\t\tif (!assets.loaded) {\n\t\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\t\tassets.loaded = true\n\t\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\t\tframeStart()\n\t\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\t\tdrawLoadScreen()\n\t\t\t\tframeEnd()\n\t\t\t} else {\n\t\t\t\tif (!debug.paused) updateFrame()\n\t\t\t\tcheckFrame()\n\t\t\t\tframeStart()\n\t\t\t\tdrawFrame()\n\t\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\t\tframeEnd()\n\t\t\t}\n\n\t\t\tif (isFirstFrame) {\n\t\t\t\tisFirstFrame = false\n\t\t\t}\n\n\t\t\tgame.events.trigger(\"frameEnd\")\n\n\t\t} catch (e) {\n\t\t\thandleErr(e)\n\t\t}\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\tfunction initEvents() {\n\n\t\tapp.onHide(() => {\n\t\t\tif (!gopt.backgroundAudio) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t}\n\t\t})\n\n\t\tapp.onShow(() => {\n\t\t\tif (!gopt.backgroundAudio) {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t})\n\n\t\tapp.onResize(() => {\n\t\t\tif (app.isFullscreen()) return\n\t\t\tconst fixedSize = gopt.width && gopt.height\n\t\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\t\tupdateViewport()\n\t\t\tif (!fixedSize) {\n\t\t\t\tgfx.frameBuffer.free()\n\t\t\t\tgfx.frameBuffer = new FrameBuffer(ggl, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t\t}\n\t\t})\n\n\t\tif (gopt.debug !== false) {\n\t\t\tapp.onKeyPress(\"f1\", () => debug.inspect = !debug.inspect)\n\t\t\tapp.onKeyPress(\"f2\", () => debug.clearLog())\n\t\t\tapp.onKeyPress(\"f8\", () => debug.paused = !debug.paused)\n\t\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t\t})\n\t\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t\t})\n\t\t\tapp.onKeyPress(\"f10\", () => debug.stepFrame())\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tapp.onKeyPress(\"b\", () => burp())\n\t\t}\n\n\t}\n\n\tupdateViewport()\n\tinitEvents()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\tpolygon,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\tmask,\n\t\tdrawon,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonHide: app.onHide,\n\t\tonShow: app.onShow,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\tgetGamepadStick: app.getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\tclamp,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\tmakeCanvas,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tif (gopt.focus !== false) {\n\t\tapp.canvas().focus()\n\t}\n\n\treturn ctx\n\n}\n","import k from '../kaboom'\r\n\r\nexport default function HelloWorld () {\r\n    var RB = k.add([\r\n        k.pos(k.center()),\r\n        k.anchor('center'),\r\n        k.rect(32,32),\r\n        k.color(255,0,0),\r\n        k.rotate(0)\r\n    ])\r\n\r\n    k.onMouseMove(() => {\r\n        RB.pos = k.mousePos();\r\n        if (k.isMouseDown()) {\r\n            k.addKaboom(k.mousePos());\r\n        }\r\n    })\r\n}","import k from '../kaboom'\r\nimport Matter from 'matter-js'\r\nimport matterRect from '../kMatter'\r\n\r\nexport default function kMatterTest () {\r\n    // Setup Engine\r\n    const engine = Matter.Engine.create()\r\n    Matter.Composite.create(engine)\r\n    k.onUpdate(() => {\r\n        Matter.Engine.update(engine, k.dt() * 1000)\r\n    })\r\n\r\n    // Actors\r\n    var RigidBody = k.add([\r\n        k.pos(k.center().x, k.center().y),\r\n        k.anchor('center'),\r\n        k.rect(32,32),\r\n        k.color(255,0,0),\r\n        k.rotate(0),\r\n        // Matter For Rectangles\r\n        matterRect(engine)\r\n    ])\r\n    var PlatForm = k.add([\r\n        k.pos(k.center().x - 64, k.center().y + 64),\r\n        k.anchor('center'),\r\n        k.rect(128,32),\r\n        k.color(0,0,0),\r\n        k.rotate(0),\r\n        // Matter For Rectangles\r\n        matterRect(engine, { isStatic: true})\r\n    ])\r\n    var PlatForm2 = k.add([\r\n        k.pos(k.center().x + 105, k.center().y + 128),\r\n        k.anchor('center'),\r\n        k.rect(128,32),\r\n        k.color(0,0,0),\r\n        k.rotate(0),\r\n        // Matter For Rectangles\r\n        matterRect(engine, { isStatic: true})\r\n    ])\r\n}","import k from './kaboom'\r\nimport Matter from 'matter-js'\r\n\r\nexport default function matterRect (engine, options = {}) {\r\n    return{\r\n        add(){\r\n            const { x, y } = this.pos\r\n            const { width, height } = this\r\n            this.body = Matter.Bodies.rectangle(x, y, width, height, options)\r\n            Matter.Composite.add(engine.world, this.body)\r\n        },\r\n        update(){\r\n            if (!this.body){\r\n                return\r\n            }\r\n            this.pos.x = this.body.position.x\r\n            this.pos.y = this.body.position.y\r\n            this.angle = this.body.angle * (180/Math.PI)\r\n        }\r\n    }\r\n}","/*!\n * matter-js 0.19.0 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory();\n\telse\n\t\troot[\"Matter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._baseDelta = 1000 / 60;\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n    Common._warnedOnce = {};\n    Common._decomp = null;\n    \n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        if (Date.now) {\n            return Date.now();\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @static\n     * @property logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n    Common.warnOnce = function() {\n        var message = Array.prototype.slice.call(arguments).join(' ');\n\n        if (!Common._warnedOnce[message]) {\n            Common.warn(message);\n            Common._warnedOnce[message] = true;\n        }\n    };\n\n    /**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n    Common.deprecated = function(obj, prop, warning) {\n        obj[prop] = Common.chain(function() {\n            Common.warnOnce('🔅 deprecated 🔅', warning);\n        }, obj[prop]);\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n    Common.setDecomp = function(decomp) {\n        Common._decomp = decomp;\n    };\n\n    /**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n    Common.getDecomp = function() {\n        // get user provided decomp if set\n        var decomp = Common._decomp;\n\n        try {\n            // otherwise from window global\n            if (!decomp && typeof window !== 'undefined') {\n                decomp = window.decomp;\n            }\n    \n            // otherwise from node global\n            if (!decomp && typeof global !== 'undefined') {\n                decomp = global.decomp;\n            }\n        } catch (e) {\n            // decomp not available\n            decomp = null;\n        }\n\n        return decomp;\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        scalar = typeof scalar !== 'undefined' ? scalar : 1;\n\n        var verticesLength = vertices.length,\n            translateX = vector.x * scalar,\n            translateY = vector.y * scalar,\n            i;\n        \n        for (i = 0; i < verticesLength; i++) {\n            vertices[i].x += translateX;\n            vertices[i].y += translateY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            pointX = point.x,\n            pointY = point.y,\n            verticesLength = vertices.length,\n            vertex,\n            dx,\n            dy,\n            i;\n\n        for (i = 0; i < verticesLength; i++) {\n            vertex = vertices[i];\n            dx = vertex.x - pointX;\n            dy = vertex.y - pointY;\n            vertex.x = pointX + (dx * cos - dy * sin);\n            vertex.y = pointY + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        var pointX = point.x,\n            pointY = point.y,\n            verticesLength = vertices.length,\n            vertex = vertices[verticesLength - 1],\n            nextVertex;\n\n        for (var i = 0; i < verticesLength; i++) {\n            nextVertex = vertices[i];\n\n            if ((pointX - vertex.x) * (nextVertex.y - vertex.y) \n                + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0) {\n                return false;\n            }\n\n            vertex = nextVertex;\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating rigid bodies.\n* For creating bodies with common configurations such as rectangles, circles and other polygons see the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(11);\n\n(function() {\n\n    Body._timeCorrection = true;\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n    Body._baseDelta = 1000 / 60;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            deltaTime: 1000 / 60,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'speed':\n                Body.setSpeed(body, value);\n                break;\n            case 'angularSpeed':\n                Body.setAngularSpeed(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia of the body. This is the second moment of area in two dimensions.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull. Concave vertices must be decomposed into convex parts.\n     * \n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param {body[]} parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body. By default velocity is unchanged.\n     * If `updateVelocity` is `true` then velocity is inferred from the change in position.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.setPosition = function(body, position, updateVelocity) {\n        var delta = Vector.sub(position, body.position);\n\n        if (updateVelocity) {\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n            body.velocity.x = delta.x;\n            body.velocity.y = delta.y;\n            body.speed = Vector.magnitude(delta);\n        } else {\n            body.positionPrev.x += delta.x;\n            body.positionPrev.y += delta.y;\n        }\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body. By default angular velocity is unchanged.\n     * If `updateVelocity` is `true` then angular velocity is inferred from the change in angle.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.setAngle = function(body, angle, updateVelocity) {\n        var delta = angle - body.angle;\n        \n        if (updateVelocity) {\n            body.anglePrev = body.angle;\n            body.angularVelocity = delta;\n            body.angularSpeed = Math.abs(delta);\n        } else {\n            body.anglePrev += delta;\n        }\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the current linear velocity of the body.  \n     * Affects body speed.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        var timeScale = body.deltaTime / Body._baseDelta;\n        body.positionPrev.x = body.position.x - velocity.x * timeScale;\n        body.positionPrev.y = body.position.y - velocity.y * timeScale;\n        body.velocity.x = (body.position.x - body.positionPrev.x) / timeScale;\n        body.velocity.y = (body.position.y - body.positionPrev.y) / timeScale;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Gets the current linear velocity of the body.\n     * @method getVelocity\n     * @param {body} body\n     * @return {vector} velocity\n     */\n    Body.getVelocity = function(body) {\n        var timeScale = Body._baseDelta / body.deltaTime;\n\n        return {\n            x: (body.position.x - body.positionPrev.x) * timeScale,\n            y: (body.position.y - body.positionPrev.y) * timeScale\n        };\n    };\n\n    /**\n     * Gets the current linear speed of the body.  \n     * Equivalent to the magnitude of its velocity.\n     * @method getSpeed\n     * @param {body} body\n     * @return {number} speed\n     */\n    Body.getSpeed = function(body) {\n        return Vector.magnitude(Body.getVelocity(body));\n    };\n\n    /**\n     * Sets the current linear speed of the body.  \n     * Direction is maintained. Affects body velocity.\n     * @method setSpeed\n     * @param {body} body\n     * @param {number} speed\n     */\n    Body.setSpeed = function(body, speed) {\n        Body.setVelocity(body, Vector.mult(Vector.normalise(Body.getVelocity(body)), speed));\n    };\n\n    /**\n     * Sets the current rotational velocity of the body.  \n     * Affects body angular speed.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        var timeScale = body.deltaTime / Body._baseDelta;\n        body.anglePrev = body.angle - velocity * timeScale;\n        body.angularVelocity = (body.angle - body.anglePrev) / timeScale;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Gets the current rotational velocity of the body.\n     * @method getAngularVelocity\n     * @param {body} body\n     * @return {number} angular velocity\n     */\n    Body.getAngularVelocity = function(body) {\n        return (body.angle - body.anglePrev) * Body._baseDelta / body.deltaTime;\n    };\n\n    /**\n     * Gets the current rotational speed of the body.  \n     * Equivalent to the magnitude of its angular velocity.\n     * @method getAngularSpeed\n     * @param {body} body\n     * @return {number} angular speed\n     */\n    Body.getAngularSpeed = function(body) {\n        return Math.abs(Body.getAngularVelocity(body));\n    };\n\n    /**\n     * Sets the current rotational speed of the body.  \n     * Direction is maintained. Affects body angular velocity.\n     * @method setAngularSpeed\n     * @param {body} body\n     * @param {number} speed\n     */\n    Body.setAngularSpeed = function(body, speed) {\n        Body.setAngularVelocity(body, Common.sign(Body.getAngularVelocity(body)) * speed);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position. By default velocity is unchanged.\n     * If `updateVelocity` is `true` then velocity is inferred from the change in position.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.translate = function(body, translation, updateVelocity) {\n        Body.setPosition(body, Vector.add(body.position, translation), updateVelocity);\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle. By default angular velocity is unchanged.\n     * If `updateVelocity` is `true` then angular velocity is inferred from the change in angle.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.rotate = function(body, rotation, point, updateVelocity) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation, updateVelocity);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            }, updateVelocity);\n\n            Body.setAngle(body, body.angle + rotation, updateVelocity);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs an update by integrating the equations of motion on the `body`.\n     * This is applied every update by `Matter.Engine` automatically.\n     * @method update\n     * @param {body} body\n     * @param {number} [deltaTime=16.666]\n     */\n    Body.update = function(body, deltaTime) {\n        deltaTime = (typeof deltaTime !== 'undefined' ? deltaTime : (1000 / 60)) * body.timeScale;\n\n        var deltaTimeSquared = deltaTime * deltaTime,\n            correction = Body._timeCorrection ? deltaTime / (body.deltaTime || deltaTime) : 1;\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * (deltaTime / Common._baseDelta),\n            velocityPrevX = (body.position.x - body.positionPrev.x) * correction,\n            velocityPrevY = (body.position.y - body.positionPrev.y) * correction;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n        body.deltaTime = deltaTime;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Updates properties `body.velocity`, `body.speed`, `body.angularVelocity` and `body.angularSpeed` which are normalised in relation to `Body._baseDelta`.\n     * @method updateVelocities\n     * @param {body} body\n     */\n    Body.updateVelocities = function(body) {\n        var timeScale = Body._baseDelta / body.deltaTime,\n            bodyVelocity = body.velocity;\n\n        bodyVelocity.x = (body.position.x - body.positionPrev.x) * timeScale;\n        bodyVelocity.y = (body.position.y - body.positionPrev.y) * timeScale;\n        body.speed = Math.sqrt((bodyVelocity.x * bodyVelocity.x) + (bodyVelocity.y * bodyVelocity.y));\n\n        body.angularVelocity = (body.angle - body.anglePrev) * timeScale;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Applies the `force` to the `body` from the force origin `position` in world-space, over a single timestep, including applying any resulting angular torque.\n     * \n     * Forces are useful for effects like gravity, wind or rocket thrust, but can be difficult in practice when precise control is needed. In these cases see `Body.setVelocity` and `Body.setPosition` as an alternative.\n     * \n     * The force from this function is only applied once for the duration of a single timestep, in other words the duration depends directly on the current engine update `delta` and the rate of calls to this function.\n     * \n     * Therefore to account for time, you should apply the force constantly over as many engine updates as equivalent to the intended duration.\n     * \n     * If all or part of the force duration is some fraction of a timestep, first multiply the force by `duration / timestep`.\n     * \n     * The force origin `position` in world-space must also be specified. Passing `body.position` will result in zero angular effect as the force origin would be at the centre of mass.\n     * \n     * The `body` will take time to accelerate under a force, the resulting effect depends on duration of the force, the body mass and other forces on the body including friction combined.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position The force origin in world-space. Pass `body.position` to avoid angular torque.\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.force.x += force.x;\n        body.force.y += force.y;\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * _Read only_. Set by `Body.create`.\n     * \n     * A `String` denoting the type of object.\n     *\n     * @readOnly\n     * @property type\n     * @type string\n     * @default \"body\"\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * _Read only_. Use `Body.setParts` to set. \n     * \n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @readOnly\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * _Read only_. Updated by `Body.setParts`.\n     * \n     * A reference to the body that this is a part of. See `body.parts`.\n     * This is a self reference if the body is not a part of another body.\n     *\n     * @readOnly\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setVertices` or `Body.setParts` to set. See also `Bodies.fromVertices`.\n     * \n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     * `[{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]`\n     * \n     * Vertices must always be convex, in clockwise order and must not contain any duplicate points.\n     * \n     * Concave vertices should be decomposed into convex `parts`, see `Bodies.fromVertices` and `Body.setParts`.\n     *\n     * When set the vertices are translated such that `body.position` is at the centre of mass.\n     * Many other body properties are automatically calculated from these vertices when set including `density`, `area` and `inertia`.\n     * \n     * The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @readOnly\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * _Read only_. Use `Body.setPosition` to set. \n     * \n     * A `Vector` that specifies the current world-space position of the body.\n     * \n     * @readOnly\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that accumulates the total force applied to the body for a single update.\n     * Force is zeroed after every `Engine.update`, so constant forces should be applied for every update they are needed. See also `Body.applyForce`.\n     * \n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that accumulates the total torque (turning force) applied to the body for a single update. See also `Body.applyForce`.\n     * Torque is zeroed after every `Engine.update`, so constant torques should be applied for every update they are needed.\n     *\n     * Torques result in angular acceleration on every update, which depends on body inertia and the engine update delta.\n     * \n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setSpeed` to set. \n     * \n     * See `Body.getSpeed` for details.\n     * \n     * Equivalent to the magnitude of `body.velocity` (always positive).\n     * \n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setVelocity` to set. \n     * \n     * See `Body.getVelocity` for details.\n     * \n     * Equivalent to the magnitude of `body.angularVelocity` (always positive).\n     * \n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * _Read only_. Use `Body.setAngularSpeed` to set. \n     * \n     * See `Body.getAngularSpeed` for details.\n     * \n     * \n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setAngularVelocity` to set. \n     * \n     * See `Body.getAngularVelocity` for details.\n     * \n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setStatic` to set. \n     * \n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     *\n     * @readOnly\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * _Read only_. Use `Sleeping.set` to set. \n     * \n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     *\n     * @readOnly\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * _Read only_. Calculated during engine update only when sleeping is enabled.\n     * \n     * A `Number` that loosely measures the amount of movement a body currently has.\n     *\n     * Derived from `body.speed^2 + body.angularSpeed^2`. See `Sleeping.update`.\n     * \n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the length of time during which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     * \n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * _Read only_. Use `Body.setDensity` to set. \n     * \n     * A `Number` that defines the density of the body (mass per unit area).\n     * \n     * Mass will also be updated when set.\n     *\n     * @readOnly\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * _Read only_. Use `Body.setMass` to set. \n     * \n     * A `Number` that defines the mass of the body.\n     * \n     * Density will also be updated when set.\n     * \n     * @readOnly\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * _Read only_. Use `Body.setMass` to set. \n     * \n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     *\n     * @readOnly\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * _Read only_. Automatically calculated when vertices, mass or density are set or set through `Body.setInertia`.\n     * \n     * A `Number` that defines the moment of inertia of the body. This is the second moment of area in two dimensions.\n     * \n     * Can be manually set to `Infinity` to prevent rotation of the body. See `Body.setInertia`.\n     * \n     * @readOnly\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * _Read only_. Automatically calculated when vertices, mass or density are set or calculated by `Body.setInertia`.\n     * \n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * \n     * @readOnly\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     * `Math.max(bodyA.restitution, bodyB.restitution)`\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     * `Math.min(bodyA.friction, bodyB.friction)`\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a thin boundary around the body where it is allowed to slightly sink into other bodies.\n     * \n     * This is required for proper collision response, including friction and restitution effects.\n     * \n     * The default should generally suffice in most cases. You may need to decrease this value for very small bodies that are nearing the default value in scale.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that specifies per-body time scaling.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * _Read only_. Updated during engine update.\n     * \n     * A `Number` that records the last delta time value used to update this body.\n     * Used to calculate speed and velocity.\n     *\n     * @readOnly\n     * @property deltaTime\n     * @type number\n     * @default 1000 / 60\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * _Read only_. Calculated automatically when vertices are set.\n     * \n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated when vertices are set.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @readOnly\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * _Read only_. Calculated automatically when vertices are set.\n     * \n     * A `Number` that measures the area of the body's convex hull.\n     * \n     * @readOnly\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated when vertices are set and constantly updated by `Body.update` during simulation.\n     * \n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n* \n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(4);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {},\n            cache: {\n                allBodies: null,\n                allConstraints: null,\n                allComposites: null\n            }\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @private\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (isModified && composite.cache) {\n            composite.cache.allBodies = null;\n            composite.cache.allConstraints = null;\n            composite.cache.allComposites = null;\n        }\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for (var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        if (composite.cache && composite.cache.allBodies) {\n            return composite.cache.allBodies;\n        }\n\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allBodies = bodies;\n        }\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        if (composite.cache && composite.cache.allConstraints) {\n            return composite.cache.allConstraints;\n        }\n\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allConstraints = constraints;\n        }\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        if (composite.cache && composite.cache.allComposites) {\n            return composite.cache.allComposites;\n        }\n\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allComposites = composites;\n        }\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * This is automatically managed when bodies, constraints or composites are added or removed.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * An object used for storing cached results for performance reasons.\n     * This is used internally only and is automatically managed.\n     *\n     * @private\n     * @property cache\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Body = __webpack_require__(4);\nvar Events = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} delta\n     */\n    Sleeping.update = function(bodies, delta) {\n        var timeScale = delta / Common._baseDelta,\n            motionSleepThreshold = Sleeping._motionSleepThreshold;\n        \n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                speed = Body.getSpeed(body),\n                angularSpeed = Body.getAngularSpeed(body),\n                motion = speed * speed + angularSpeed * angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < motionSleepThreshold) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold / timeScale) {\n                    Sleeping.set(body, true);\n                }\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     */\n    Sleeping.afterCollisions = function(pairs) {\n        var motionSleepThreshold = Sleeping._motionSleepThreshold;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > motionSleepThreshold) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Collision` module contains methods for detecting collisions between a given pair of bodies.\n*\n* For efficient detection between a list of bodies, see `Matter.Detector` and `Matter.Query`.\n*\n* See `Matter.Engine` for collision events.\n*\n* @class Collision\n*/\n\nvar Collision = {};\n\nmodule.exports = Collision;\n\nvar Vertices = __webpack_require__(3);\nvar Pair = __webpack_require__(9);\n\n(function() {\n    var _supports = [];\n\n    var _overlapAB = {\n        overlap: 0,\n        axis: null\n    };\n\n    var _overlapBA = {\n        overlap: 0,\n        axis: null\n    };\n\n    /**\n     * Creates a new collision record.\n     * @method create\n     * @param {body} bodyA The first body part represented by the collision record\n     * @param {body} bodyB The second body part represented by the collision record\n     * @return {collision} A new collision record\n     */\n    Collision.create = function(bodyA, bodyB) {\n        return { \n            pair: null,\n            collided: false,\n            bodyA: bodyA,\n            bodyB: bodyB,\n            parentA: bodyA.parent,\n            parentB: bodyB.parent,\n            depth: 0,\n            normal: { x: 0, y: 0 },\n            tangent: { x: 0, y: 0 },\n            penetration: { x: 0, y: 0 },\n            supports: []\n        };\n    };\n\n    /**\n     * Detect collision between two bodies.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {pairs} [pairs] Optionally reuse collision records from existing pairs.\n     * @return {collision|null} A collision record if detected, otherwise null\n     */\n    Collision.collides = function(bodyA, bodyB, pairs) {\n        Collision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n        if (_overlapAB.overlap <= 0) {\n            return null;\n        }\n\n        Collision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n        if (_overlapBA.overlap <= 0) {\n            return null;\n        }\n\n        // reuse collision records for gc efficiency\n        var pair = pairs && pairs.table[Pair.id(bodyA, bodyB)],\n            collision;\n\n        if (!pair) {\n            collision = Collision.create(bodyA, bodyB);\n            collision.collided = true;\n            collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n            collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n            collision.parentA = collision.bodyA.parent;\n            collision.parentB = collision.bodyB.parent;\n        } else {\n            collision = pair.collision;\n        }\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        var minOverlap;\n\n        if (_overlapAB.overlap < _overlapBA.overlap) {\n            minOverlap = _overlapAB;\n        } else {\n            minOverlap = _overlapBA;\n        }\n\n        var normal = collision.normal,\n            supports = collision.supports,\n            minAxis = minOverlap.axis,\n            minAxisX = minAxis.x,\n            minAxisY = minAxis.y;\n\n        // ensure normal is facing away from bodyA\n        if (minAxisX * (bodyB.position.x - bodyA.position.x) + minAxisY * (bodyB.position.y - bodyA.position.y) < 0) {\n            normal.x = minAxisX;\n            normal.y = minAxisY;\n        } else {\n            normal.x = -minAxisX;\n            normal.y = -minAxisY;\n        }\n        \n        collision.tangent.x = -normal.y;\n        collision.tangent.y = normal.x;\n\n        collision.depth = minOverlap.overlap;\n\n        collision.penetration.x = normal.x * collision.depth;\n        collision.penetration.y = normal.y * collision.depth;\n\n        // find support points, there is always either exactly one or two\n        var supportsB = Collision._findSupports(bodyA, bodyB, normal, 1),\n            supportCount = 0;\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, supportsB[0])) {\n            supports[supportCount++] = supportsB[0];\n        }\n\n        if (Vertices.contains(bodyA.vertices, supportsB[1])) {\n            supports[supportCount++] = supportsB[1];\n        }\n\n        // find the supports from bodyA that are inside bodyB\n        if (supportCount < 2) {\n            var supportsA = Collision._findSupports(bodyB, bodyA, normal, -1);\n\n            if (Vertices.contains(bodyB.vertices, supportsA[0])) {\n                supports[supportCount++] = supportsA[0];\n            }\n\n            if (supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])) {\n                supports[supportCount++] = supportsA[1];\n            }\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supportCount === 0) {\n            supports[supportCount++] = supportsB[0];\n        }\n\n        // update supports array size\n        supports.length = supportCount;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {object} result\n     * @param {vertices} verticesA\n     * @param {vertices} verticesB\n     * @param {axes} axes\n     */\n    Collision._overlapAxes = function(result, verticesA, verticesB, axes) {\n        var verticesALength = verticesA.length,\n            verticesBLength = verticesB.length,\n            verticesAX = verticesA[0].x,\n            verticesAY = verticesA[0].y,\n            verticesBX = verticesB[0].x,\n            verticesBY = verticesB[0].y,\n            axesLength = axes.length,\n            overlapMin = Number.MAX_VALUE,\n            overlapAxisNumber = 0,\n            overlap,\n            overlapAB,\n            overlapBA,\n            dot,\n            i,\n            j;\n\n        for (i = 0; i < axesLength; i++) {\n            var axis = axes[i],\n                axisX = axis.x,\n                axisY = axis.y,\n                minA = verticesAX * axisX + verticesAY * axisY,\n                minB = verticesBX * axisX + verticesBY * axisY,\n                maxA = minA,\n                maxB = minB;\n            \n            for (j = 1; j < verticesALength; j += 1) {\n                dot = verticesA[j].x * axisX + verticesA[j].y * axisY;\n\n                if (dot > maxA) { \n                    maxA = dot;\n                } else if (dot < minA) { \n                    minA = dot;\n                }\n            }\n\n            for (j = 1; j < verticesBLength; j += 1) {\n                dot = verticesB[j].x * axisX + verticesB[j].y * axisY;\n\n                if (dot > maxB) { \n                    maxB = dot;\n                } else if (dot < minB) { \n                    minB = dot;\n                }\n            }\n\n            overlapAB = maxA - minB;\n            overlapBA = maxB - minA;\n            overlap = overlapAB < overlapBA ? overlapAB : overlapBA;\n\n            if (overlap < overlapMin) {\n                overlapMin = overlap;\n                overlapAxisNumber = i;\n\n                if (overlap <= 0) {\n                    // can not be intersecting\n                    break;\n                }\n            } \n        }\n\n        result.axis = axes[overlapAxisNumber];\n        result.overlap = overlapMin;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    Collision._projectToAxis = function(projection, vertices, axis) {\n        var min = vertices[0].x * axis.x + vertices[0].y * axis.y,\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = vertices[i].x * axis.x + vertices[i].y * axis.y;\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {vector} normal\n     * @param {number} direction\n     * @return [vector]\n     */\n    Collision._findSupports = function(bodyA, bodyB, normal, direction) {\n        var vertices = bodyB.vertices,\n            verticesLength = vertices.length,\n            bodyAPositionX = bodyA.position.x,\n            bodyAPositionY = bodyA.position.y,\n            normalX = normal.x * direction,\n            normalY = normal.y * direction,\n            nearestDistance = Number.MAX_VALUE,\n            vertexA,\n            vertexB,\n            vertexC,\n            distance,\n            j;\n\n        // find deepest vertex relative to the axis\n        for (j = 0; j < verticesLength; j += 1) {\n            vertexB = vertices[j];\n            distance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y);\n\n            // convex hill-climbing\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertexB;\n            }\n        }\n\n        // measure next vertex\n        vertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength];\n        nearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y);\n\n        // compare with previous vertex\n        vertexB = vertices[(vertexA.index + 1) % verticesLength];\n        if (normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance) {\n            _supports[0] = vertexA;\n            _supports[1] = vertexB;\n\n            return _supports;\n        }\n\n        _supports[0] = vertexA;\n        _supports[1] = vertexC;\n\n        return _supports;\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A reference to the pair using this collision record, if there is one.\n     *\n     * @property pair\n     * @type {pair|null}\n     * @default null\n     */\n\n    /**\n     * A flag that indicates if the bodies were colliding when the collision was last updated.\n     * \n     * @property collided\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The first body part represented by the collision (see also `collision.parentA`).\n     * \n     * @property bodyA\n     * @type body\n     */\n\n    /**\n     * The second body part represented by the collision (see also `collision.parentB`).\n     * \n     * @property bodyB\n     * @type body\n     */\n\n    /**\n     * The first body represented by the collision (i.e. `collision.bodyA.parent`).\n     * \n     * @property parentA\n     * @type body\n     */\n\n    /**\n     * The second body represented by the collision (i.e. `collision.bodyB.parent`).\n     * \n     * @property parentB\n     * @type body\n     */\n\n    /**\n     * A `Number` that represents the minimum separating distance between the bodies along the collision normal.\n     *\n     * @readOnly\n     * @property depth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A normalised `Vector` that represents the direction between the bodies that provides the minimum separating distance.\n     *\n     * @property normal\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A normalised `Vector` that is the tangent direction to the collision normal.\n     *\n     * @property tangent\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that represents the direction and depth of the collision.\n     *\n     * @property penetration\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * An array of body vertices that represent the support points in the collision.\n     * These are the deepest vertices (along the collision normal) of each body that are contained by the other body's vertices.\n     *\n     * @property supports\n     * @type vector[]\n     * @default []\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(16);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            collision: collision,\n            contacts: [],\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: 0,\n            friction: 0,\n            frictionStatic: 0,\n            restitution: 0,\n            slop: 0\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB,\n            parentAVerticesLength = parentA.vertices.length;\n        \n        pair.isActive = true;\n        pair.timeUpdated = timestamp;\n        pair.collision = collision;\n        pair.separation = collision.depth;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction;\n        pair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic;\n        pair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution;\n        pair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop;\n\n        collision.pair = pair;\n        activeContacts.length = 0;\n        \n        for (var i = 0; i < supports.length; i++) {\n            var support = supports[i],\n                contactId = support.body === parentA ? support.index : parentAVerticesLength + support.index,\n                contact = contacts[contactId];\n\n            if (contact) {\n                activeContacts.push(contact);\n            } else {\n                activeContacts.push(contacts[contactId] = Contact.create(support));\n            }\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(11);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} delta\n     */\n    Constraint.solveAll = function(constraints, delta) {\n        var timeScale = Common.clamp(delta / Common._baseDelta, 0, 1);\n\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            isRigid = constraint.stiffness >= 1 || constraint.length === 0,\n            stiffness = isRigid ? constraint.stiffness * timeScale \n                : constraint.stiffness * timeScale * timeScale,\n            damping = constraint.damping * timeScale,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n    \n        if (damping > 0) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (damping > 0) {\n                bodyA.positionPrev.x -= damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (damping > 0) {\n                bodyB.positionPrev.x += damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) \n                + (constraint.pointA ? constraint.pointA.x : 0),\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) \n                + (constraint.pointA ? constraint.pointA.y : 0)\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) \n                + (constraint.pointB ? constraint.pointB.x : 0),\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) \n                + (constraint.pointB ? constraint.pointB.y : 0)\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(4);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Utility to create a compound body based on set(s) of vertices.\n     * \n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that automatic conconcave decomposition results are not always optimal. \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = Common.getDecomp(),\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        // check decomp is as expected\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp) {\n                Common.warnOnce(\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\n                );\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for efficiently detecting collisions between a list of bodies using a broadphase algorithm.\n*\n* @class Detector\n*/\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar Common = __webpack_require__(0);\nvar Collision = __webpack_require__(8);\n\n(function() {\n\n    /**\n     * Creates a new collision detector.\n     * @method create\n     * @param {} options\n     * @return {detector} A new collision detector\n     */\n    Detector.create = function(options) {\n        var defaults = {\n            bodies: [],\n            pairs: null\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * Sets the list of bodies in the detector.\n     * @method setBodies\n     * @param {detector} detector\n     * @param {body[]} bodies\n     */\n    Detector.setBodies = function(detector, bodies) {\n        detector.bodies = bodies.slice(0);\n    };\n\n    /**\n     * Clears the detector including its list of bodies.\n     * @method clear\n     * @param {detector} detector\n     */\n    Detector.clear = function(detector) {\n        detector.bodies = [];\n    };\n\n    /**\n     * Efficiently finds all collisions among all the bodies in `detector.bodies` using a broadphase algorithm.\n     * \n     * _Note:_ The specific ordering of collisions returned is not guaranteed between releases and may change for performance reasons.\n     * If a specific ordering is required then apply a sort to the resulting array.\n     * @method collisions\n     * @param {detector} detector\n     * @return {collision[]} collisions\n     */\n    Detector.collisions = function(detector) {\n        var collisions = [],\n            pairs = detector.pairs,\n            bodies = detector.bodies,\n            bodiesLength = bodies.length,\n            canCollide = Detector.canCollide,\n            collides = Collision.collides,\n            i,\n            j;\n\n        bodies.sort(Detector._compareBoundsX);\n\n        for (i = 0; i < bodiesLength; i++) {\n            var bodyA = bodies[i],\n                boundsA = bodyA.bounds,\n                boundXMax = bodyA.bounds.max.x,\n                boundYMax = bodyA.bounds.max.y,\n                boundYMin = bodyA.bounds.min.y,\n                bodyAStatic = bodyA.isStatic || bodyA.isSleeping,\n                partsALength = bodyA.parts.length,\n                partsASingle = partsALength === 1;\n\n            for (j = i + 1; j < bodiesLength; j++) {\n                var bodyB = bodies[j],\n                    boundsB = bodyB.bounds;\n\n                if (boundsB.min.x > boundXMax) {\n                    break;\n                }\n\n                if (boundYMax < boundsB.min.y || boundYMin > boundsB.max.y) {\n                    continue;\n                }\n\n                if (bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)) {\n                    continue;\n                }\n\n                if (!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)) {\n                    continue;\n                }\n\n                var partsBLength = bodyB.parts.length;\n\n                if (partsASingle && partsBLength === 1) {\n                    var collision = collides(bodyA, bodyB, pairs);\n\n                    if (collision) {\n                        collisions.push(collision);\n                    }\n                } else {\n                    var partsAStart = partsALength > 1 ? 1 : 0,\n                        partsBStart = partsBLength > 1 ? 1 : 0;\n                    \n                    for (var k = partsAStart; k < partsALength; k++) {\n                        var partA = bodyA.parts[k],\n                            boundsA = partA.bounds;\n\n                        for (var z = partsBStart; z < partsBLength; z++) {\n                            var partB = bodyB.parts[z],\n                                boundsB = partB.bounds;\n\n                            if (boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x\n                                || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y) {\n                                continue;\n                            }\n\n                            var collision = collides(partA, partB, pairs);\n\n                            if (collision) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n    /**\n     * The comparison function used in the broadphase algorithm.\n     * Returns the signed delta of the bodies bounds on the x-axis.\n     * @private\n     * @method _sortCompare\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {number} The signed delta used for sorting\n     */\n    Detector._compareBoundsX = function(bodyA, bodyB) {\n        return bodyA.bounds.min.x - bodyB.bounds.min.x;\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The array of `Matter.Body` between which the detector finds collisions.\n     * \n     * _Note:_ The order of bodies in this array _is not fixed_ and will be continually managed by the detector.\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * Optional. A `Matter.Pairs` object from which previous collision objects may be reused. Intended for internal `Matter.Engine` usage.\n     * @property pairs\n     * @type {pairs|null}\n     * @default null\n     */\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-+]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-+]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(18);\nvar Detector = __webpack_require__(13);\nvar Pairs = __webpack_require__(19);\nvar Events = __webpack_require__(5);\nvar Composite = __webpack_require__(6);\nvar Constraint = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(4);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(options) {\n        options = options || {};\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            timing: {\n                timestamp: 0,\n                timeScale: 1,\n                lastDelta: 0,\n                lastElapsed: 0\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        engine.world = options.world || Composite.create({ label: 'World' });\n        engine.pairs = options.pairs || Pairs.create();\n        engine.detector = options.detector || Detector.create();\n\n        // for temporary back compatibility only\n        engine.grid = { buckets: [] };\n        engine.world.gravity = engine.gravity;\n        engine.broadphase = engine.grid;\n        engine.metrics = {};\n        \n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` milliseconds.\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     */\n    Engine.update = function(engine, delta) {\n        var startTime = Common.now();\n\n        var world = engine.world,\n            detector = engine.detector,\n            pairs = engine.pairs,\n            timing = engine.timing,\n            timestamp = timing.timestamp,\n            i;\n\n        delta = typeof delta !== 'undefined' ? delta : Common._baseDelta;\n        delta *= timing.timeScale;\n\n        // increment timestamp\n        timing.timestamp += delta;\n        timing.lastDelta = delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp,\n            delta: delta\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get all bodies and all constraints in the world\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // if the world has changed\n        if (world.isModified) {\n            // update the detector bodies\n            Detector.setBodies(detector, allBodies);\n\n            // reset all composite modified flags\n            Composite.setModified(world, false, false, true);\n        }\n\n        // update sleeping if enabled\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, delta);\n\n        // apply gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\n\n        // update all body position and rotation by integration\n        if (delta > 0) {\n            Engine._bodiesUpdate(allBodies, delta);\n        }\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, delta);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // find all collisions\n        detector.pairs = engine.pairs;\n        var collisions = Detector.collisions(detector);\n\n        // update collision pairs\n        Pairs.update(pairs, collisions, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        var positionDamping = Common.clamp(20 / engine.positionIterations, 0, 1);\n        \n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, delta, positionDamping);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, delta);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, delta);\n        }\n\n        // update body speed and velocity properties\n        Engine._bodiesUpdateVelocities(allBodies);\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        // log the time elapsed computing this update\n        engine.timing.lastElapsed = Common.now() - startTime;\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine pairs and detector.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        Pairs.clear(engine.pairs);\n        Detector.clear(engine.detector);\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        var bodiesLength = bodies.length;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applies gravitational acceleration to all `bodies`.\n     * This models a [uniform gravitational field](https://en.wikipedia.org/wiki/Gravity_of_Earth), similar to near the surface of a planet.\n     * \n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001,\n            bodiesLength = bodies.length;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // add the resultant force of gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applies `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} delta The amount of time elapsed between updates\n     */\n    Engine._bodiesUpdate = function(bodies, delta) {\n        var bodiesLength = bodies.length;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, delta);\n        }\n    };\n\n    /**\n     * Applies `Body.updateVelocities` to all given `bodies`.\n     * @method _bodiesUpdateVelocities\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesUpdateVelocities = function(bodies) {\n        var bodiesLength = bodies.length;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            Body.updateVelocities(bodies[i]);\n        }\n    };\n\n    /**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     * \n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     * \n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     * \n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Matter.Detector` instance.\n     *\n     * @property detector\n     * @type detector\n     * @default a Matter.Detector instance\n     */\n\n    /**\n     * A `Matter.Grid` instance.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * An optional gravitational acceleration applied to all bodies in `engine.world` on every update.\n     * \n     * This models a [uniform gravitational field](https://en.wikipedia.org/wiki/Gravity_of_Earth), similar to near the surface of a planet. For gravity in other contexts, disable this and apply forces as needed.\n     * \n     * To disable set the `scale` component to `0`.\n     * \n     * This is split into three components for ease of use:  \n     * a normalised direction (`x` and `y`) and magnitude (`scale`).\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravitational direction normal `x` component, to be multiplied by `gravity.scale`.\n     * \n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravitational direction normal `y` component, to be multiplied by `gravity.scale`.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The magnitude of the gravitational acceleration.\n     * \n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 2;\n    Resolver._restingThreshTangent = Math.sqrt(6);\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n    Resolver._frictionMaxStatic = Number.MAX_VALUE;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount,\n            pairsLength = pairs.length;\n\n        // find total contacts on each body\n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} delta\n     * @param {number} [damping=1]\n     */\n    Resolver.solvePosition = function(pairs, delta, damping) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            contactShare,\n            positionImpulse,\n            positionDampen = Resolver._positionDampen * (damping || 1),\n            slopDampen = Common.clamp(delta / Common._baseDelta, 0, 1),\n            pairsLength = pairs.length;\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            pair.separation = \n                normal.x * (bodyB.positionImpulse.x + collision.penetration.x - bodyA.positionImpulse.x)\n                + normal.y * (bodyB.positionImpulse.y + collision.penetration.y - bodyA.positionImpulse.y);\n        }\n        \n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = pair.separation - pair.slop * slopDampen;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        var positionWarming = Resolver._positionWarming,\n            bodiesLength = bodies.length,\n            verticesTranslate = Vertices.translate,\n            boundsUpdate = Bounds.update;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i],\n                positionImpulse = body.positionImpulse,\n                positionImpulseX = positionImpulse.x,\n                positionImpulseY = positionImpulse.y,\n                velocity = body.velocity;\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (positionImpulseX !== 0 || positionImpulseY !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    verticesTranslate(part.vertices, positionImpulse);\n                    boundsUpdate(part.bounds, part.vertices, velocity);\n                    part.position.x += positionImpulseX;\n                    part.position.y += positionImpulseY;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += positionImpulseX;\n                body.positionPrev.y += positionImpulseY;\n\n                if (positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    positionImpulse.x = 0;\n                    positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    positionImpulse.x *= positionWarming;\n                    positionImpulse.y *= positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var pairsLength = pairs.length,\n            i,\n            j;\n        \n        for (i = 0; i < pairsLength; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var contacts = pair.activeContacts,\n                contactsLength = contacts.length,\n                collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent;\n    \n            // resolve each contact\n            for (j = 0; j < contactsLength; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    normalImpulse = contact.normalImpulse,\n                    tangentImpulse = contact.tangentImpulse;\n    \n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    var impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse,\n                        impulseY = normal.y * normalImpulse + tangent.y * tangentImpulse;\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        bodyA.positionPrev.x += impulseX * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulseY * bodyA.inverseMass;\n                        bodyA.anglePrev += bodyA.inverseInertia * (\n                            (contactVertex.x - bodyA.position.x) * impulseY\n                            - (contactVertex.y - bodyA.position.y) * impulseX\n                        );\n                    }\n    \n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;\n                        bodyB.anglePrev -= bodyB.inverseInertia * (\n                            (contactVertex.x - bodyB.position.x) * impulseY \n                            - (contactVertex.y - bodyB.position.y) * impulseX\n                        );\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} delta\n     */\n    Resolver.solveVelocity = function(pairs, delta) {\n        var timeScale = delta / Common._baseDelta,\n            timeScaleSquared = timeScale * timeScale,\n            timeScaleCubed = timeScaleSquared * timeScale,\n            restingThresh = -Resolver._restingThresh * timeScale,\n            restingThreshTangent = Resolver._restingThreshTangent,\n            frictionNormalMultiplier = Resolver._frictionNormalMultiplier * timeScale,\n            frictionMaxStatic = Resolver._frictionMaxStatic,\n            pairsLength = pairs.length,\n            tangentImpulse,\n            maxFriction,\n            i,\n            j;\n\n        for (i = 0; i < pairsLength; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                bodyAVelocity = bodyA.velocity,\n                bodyBVelocity = bodyB.velocity,\n                normalX = collision.normal.x,\n                normalY = collision.normal.y,\n                tangentX = collision.tangent.x,\n                tangentY = collision.tangent.y,\n                contacts = pair.activeContacts,\n                contactsLength = contacts.length,\n                contactShare = 1 / contactsLength,\n                inverseMassTotal = bodyA.inverseMass + bodyB.inverseMass,\n                friction = pair.friction * pair.frictionStatic * frictionNormalMultiplier;\n\n            // update body velocities\n            bodyAVelocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyAVelocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyBVelocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyBVelocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (j = 0; j < contactsLength; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex;\n\n                var offsetAX = contactVertex.x - bodyA.position.x,\n                    offsetAY = contactVertex.y - bodyA.position.y,\n                    offsetBX = contactVertex.x - bodyB.position.x,\n                    offsetBY = contactVertex.y - bodyB.position.y;\n \n                var velocityPointAX = bodyAVelocity.x - offsetAY * bodyA.angularVelocity,\n                    velocityPointAY = bodyAVelocity.y + offsetAX * bodyA.angularVelocity,\n                    velocityPointBX = bodyBVelocity.x - offsetBY * bodyB.angularVelocity,\n                    velocityPointBY = bodyBVelocity.y + offsetBX * bodyB.angularVelocity;\n\n                var relativeVelocityX = velocityPointAX - velocityPointBX,\n                    relativeVelocityY = velocityPointAY - velocityPointBY;\n\n                var normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY,\n                    tangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY;\n\n                // coulomb friction\n                var normalOverlap = pair.separation + normalVelocity;\n                var normalForce = Math.min(normalOverlap, 1);\n                normalForce = normalOverlap < 0 ? 0 : normalForce;\n\n                var frictionLimit = normalForce * friction;\n\n                if (tangentVelocity < -frictionLimit || tangentVelocity > frictionLimit) {\n                    maxFriction = (tangentVelocity > 0 ? tangentVelocity : -tangentVelocity);\n                    tangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleCubed;\n                    \n                    if (tangentImpulse < -maxFriction) {\n                        tangentImpulse = -maxFriction;\n                    } else if (tangentImpulse > maxFriction) {\n                        tangentImpulse = maxFriction;\n                    }\n                } else {\n                    tangentImpulse = tangentVelocity;\n                    maxFriction = frictionMaxStatic;\n                }\n\n                // account for mass, inertia and contact offset\n                var oAcN = offsetAX * normalY - offsetAY * normalX,\n                    oBcN = offsetBX * normalY - offsetBY * normalX,\n                    share = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity * share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < restingThresh) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse += normalImpulse;\n                    if (contact.normalImpulse > 0) contact.normalImpulse = 0;\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity < -restingThreshTangent || tangentVelocity > restingThreshTangent) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse += tangentImpulse;\n                    if (contact.tangentImpulse < -maxFriction) contact.tangentImpulse = -maxFriction;\n                    if (contact.tangentImpulse > maxFriction) contact.tangentImpulse = maxFriction;\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                var impulseX = normalX * normalImpulse + tangentX * tangentImpulse,\n                    impulseY = normalY * normalImpulse + tangentY * tangentImpulse;\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulseX * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulseY * bodyA.inverseMass;\n                    bodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;\n                    bodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsListLength = pairsList.length,\n            pairsTable = pairs.table,\n            collisionsLength = collisions.length,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairIndex,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsListLength; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisionsLength; i++) {\n            collision = collisions[i];\n            pair = collision.pair;\n\n            if (pair) {\n                // pair already exists (but may or may not be active)\n                if (pair.isActive) {\n                    // pair exists and is active\n                    collisionActive.push(pair);\n                } else {\n                    // pair exists but was inactive, so a collision has just started again\n                    collisionStart.push(pair);\n                }\n\n                // update the pair\n                Pair.update(pair, collision, timestamp);\n                pair.confirmedActive = true;\n            } else {\n                // pair did not exist, create a new pair\n                pair = Pair.create(collision, timestamp);\n                pairsTable[pair.id] = pair;\n\n                // push the new pair\n                collisionStart.push(pair);\n                pairsList.push(pair);\n            }\n        }\n\n        // find pairs that are no longer active\n        var removePairIndex = [];\n        pairsListLength = pairsList.length;\n\n        for (i = 0; i < pairsListLength; i++) {\n            pair = pairsList[i];\n            \n            if (!pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n\n                if (!pair.collision.bodyA.isSleeping && !pair.collision.bodyB.isSleeping) {\n                    removePairIndex.push(i);\n                }\n            }\n        }\n\n        // remove inactive pairs\n        for (i = 0; i < removePairIndex.length; i++) {\n            pairIndex = removePairIndex[i] - i;\n            pair = pairsList[pairIndex];\n            pairsList.splice(pairIndex, 1);\n            delete pairsTable[pair.id];\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(21);\r\n\r\nMatter.Axes = __webpack_require__(11);\r\nMatter.Bodies = __webpack_require__(12);\r\nMatter.Body = __webpack_require__(4);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Collision = __webpack_require__(8);\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Composite = __webpack_require__(6);\r\nMatter.Composites = __webpack_require__(22);\r\nMatter.Constraint = __webpack_require__(10);\r\nMatter.Contact = __webpack_require__(16);\r\nMatter.Detector = __webpack_require__(13);\r\nMatter.Engine = __webpack_require__(17);\r\nMatter.Events = __webpack_require__(5);\r\nMatter.Grid = __webpack_require__(23);\r\nMatter.Mouse = __webpack_require__(14);\r\nMatter.MouseConstraint = __webpack_require__(24);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Pairs = __webpack_require__(19);\r\nMatter.Plugin = __webpack_require__(15);\r\nMatter.Query = __webpack_require__(25);\r\nMatter.Render = __webpack_require__(26);\r\nMatter.Resolver = __webpack_require__(18);\r\nMatter.Runner = __webpack_require__(27);\r\nMatter.SAT = __webpack_require__(28);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Svg = __webpack_require__(29);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\nMatter.World = __webpack_require__(30);\r\n\r\n// temporary back compatibility\r\nMatter.Engine.run = Matter.Runner.run;\r\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run ➤ use Matter.Runner.run(engine) instead');\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(15);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.19.0\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(6);\nvar Constraint = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(4);\nvar Bodies = __webpack_require__(12);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle ➤ moved to newtonsCradle example');\n    \n    /**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    deprecated(Composites, 'car', 'Composites.car ➤ moved to car example');\n\n    /**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n    deprecated(Composites, 'softBody', 'Composites.softBody ➤ moved to softBody and cloth examples');\n})();\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Detector`.\n*\n* All usage should be migrated to `Matter.Detector` or another alternative.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n* @deprecated\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @deprecated replaced by Matter.Detector\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // temporary back compatibility bounds check\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    deprecated(Grid, 'update', 'Grid.update ➤ replaced by Matter.Detector');\n\n    /**\n     * Clears the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    deprecated(Grid, 'clear', 'Grid.clear ➤ replaced by Matter.Detector');\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        var gridPairs = grid.pairs,\n            pairId = Pair.id,\n            bucketLength = bucket.length,\n            i;\n\n        // add new pairs\n        for (i = 0; i < bucketLength; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var id = pairId(body, bodyB),\n                pair = gridPairs[id];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                gridPairs[id] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        var gridPairs = grid.pairs,\n            pairId = Pair.id,\n            i;\n\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        var bucketLength = bucket.length;\n\n        // update pair counts\n        for (i = 0; i < bucketLength; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var pair = gridPairs[pairId(body, bucket[i])];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pair,\n            gridPairs = grid.pairs,\n            pairKeys = Common.keys(gridPairs),\n            pairKeysLength = pairKeys.length,\n            pairs = [],\n            k;\n\n        // iterate over grid.pairs\n        for (k = 0; k < pairKeysLength; k++) {\n            pair = gridPairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete gridPairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(14);\nvar Events = __webpack_require__(5);\nvar Detector = __webpack_require__(13);\nvar Constraint = __webpack_require__(10);\nvar Composite = __webpack_require__(6);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar Collision = __webpack_require__(8);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(12);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {collision[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [],\n            bodiesLength = bodies.length,\n            bounds = body.bounds,\n            collides = Collision.collides,\n            overlaps = Bounds.overlaps;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var bodyA = bodies[i],\n                partsALength = bodyA.parts.length,\n                partsAStart = partsALength === 1 ? 0 : 1;\n            \n            if (overlaps(bodyA.bounds, bounds)) {\n                for (var j = partsAStart; j < partsALength; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (overlaps(part.bounds, bounds)) {\n                        var collision = collides(part, body);\n\n                        if (collision) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {collision[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Body = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(5);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(14);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    Render._goodFps = 30;\n    Render._goodDelta = 1000 / 60;\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n                historySize: 60,\n                delta: 0,\n                deltaHistory: [],\n                lastTime: 0,\n                lastTimestamp: 0,\n                lastElapsed: 0,\n                timestampElapsed: 0,\n                timestampElapsedHistory: [],\n                engineDeltaHistory: [],\n                engineElapsedHistory: [],\n                elapsedHistory: []\n            },\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showStats: false,\n                showPerformance: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        // for temporary back compatibility only\n        render.controller = Render;\n        render.options.showBroadphase = false;\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            \n            _updateTiming(render, time);\n\n            Render.world(render, time);\n\n            if (render.options.showStats || render.options.showDebug) {\n                Render.stats(render, render.context, time);\n            }\n\n            if (render.options.showPerformance || render.options.showDebug) {\n                Render.performance(render, render.context, time);\n            }\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render, time) {\n        var startTime = Common.now(),\n            engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            timing = render.timing;\n\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n\n        // log the time elapsed computing this update\n        timing.lastElapsed = Common.now() - startTime;\n    };\n\n    /**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n    Render.stats = function(render, context, time) {\n        var engine = render.engine,\n            world = engine.world,\n            bodies = Composite.allBodies(world),\n            parts = 0,\n            width = 55,\n            height = 44,\n            x = 0,\n            y = 0;\n        \n        // count parts\n        for (var i = 0; i < bodies.length; i += 1) {\n            parts += bodies[i].parts.length;\n        }\n\n        // sections\n        var sections = {\n            'Part': parts,\n            'Body': bodies.length,\n            'Cons': Composite.allConstraints(world).length,\n            'Comp': Composite.allComposites(world).length,\n            'Pair': engine.pairs.list.length\n        };\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(x, y, width * 5.5, height);\n\n        context.font = '12px Arial';\n        context.textBaseline = 'top';\n        context.textAlign = 'right';\n\n        // sections\n        for (var key in sections) {\n            var section = sections[key];\n            // label\n            context.fillStyle = '#aaa';\n            context.fillText(key, x + width, y + 8);\n\n            // value\n            context.fillStyle = '#eee';\n            context.fillText(section, x + width, y + 26);\n\n            x += width;\n        }\n    };\n\n    /**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.performance = function(render, context) {\n        var engine = render.engine,\n            timing = render.timing,\n            deltaHistory = timing.deltaHistory,\n            elapsedHistory = timing.elapsedHistory,\n            timestampElapsedHistory = timing.timestampElapsedHistory,\n            engineDeltaHistory = timing.engineDeltaHistory,\n            engineElapsedHistory = timing.engineElapsedHistory,\n            lastEngineDelta = engine.timing.lastDelta;\n        \n        var deltaMean = _mean(deltaHistory),\n            elapsedMean = _mean(elapsedHistory),\n            engineDeltaMean = _mean(engineDeltaHistory),\n            engineElapsedMean = _mean(engineElapsedHistory),\n            timestampElapsedMean = _mean(timestampElapsedHistory),\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\n            fps = (1000 / deltaMean) || 0;\n\n        var graphHeight = 4,\n            gap = 12,\n            width = 60,\n            height = 34,\n            x = 10,\n            y = 69;\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(0, 50, gap * 4 + width * 5 + 22, height);\n\n        // show FPS\n        Render.status(\n            context, x, y, width, graphHeight, deltaHistory.length, \n            Math.round(fps) + ' fps', \n            fps / Render._goodFps,\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\n        );\n\n        // show engine delta\n        Render.status(\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n            lastEngineDelta.toFixed(2) + ' dt', \n            Render._goodDelta / lastEngineDelta,\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\n        );\n\n        // show engine update time\n        Render.status(\n            context, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n            engineElapsedMean.toFixed(2) + ' ut', \n            1 - (engineElapsedMean / Render._goodFps),\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\n        );\n\n        // show render time\n        Render.status(\n            context, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n            elapsedMean.toFixed(2) + ' rt', \n            1 - (elapsedMean / Render._goodFps),\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\n        );\n\n        // show effective speed\n        Render.status(\n            context, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length, \n            rateMean.toFixed(2) + ' x', \n            rateMean * rateMean * rateMean,\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\n        );\n    };\n\n    /**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n        // background\n        context.strokeStyle = '#888';\n        context.fillStyle = '#444';\n        context.lineWidth = 1;\n        context.fillRect(x, y + 7, width, 1);\n\n        // chart\n        context.beginPath();\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\n        for (var i = 0; i < width; i += 1) {\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\n        }\n        context.stroke();\n\n        // indicator\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\n        context.fillRect(x, y - 7, 4, 4);\n\n        // label\n        context.font = '12px Arial';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.fillStyle = '#eee';\n        context.fillText(label, x + width, y - 5);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            var velocity = Body.getVelocity(body);\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + velocity.x, body.position.y + velocity.y);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n    var _updateTiming = function(render, time) {\n        var engine = render.engine,\n            timing = render.timing,\n            historySize = timing.historySize,\n            timestamp = engine.timing.timestamp;\n\n        timing.delta = time - timing.lastTime || Render._goodDelta;\n        timing.lastTime = time;\n\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\n        timing.lastTimestamp = timestamp;\n\n        timing.deltaHistory.unshift(timing.delta);\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\n\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\n\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\n\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\n\n        timing.elapsedHistory.unshift(timing.lastElapsed);\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\n    };\n\n    /**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n    var _mean = function(values) {\n        var result = 0;\n        for (var i = 0; i < values.length; i += 1) {\n            result += values[i];\n        }\n        return (result / values.length) || 0;\n    };\n\n    /**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @deprecated\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n    /**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable all debug information overlays together.  \n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the engine stats info overlay.  \n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable performance charts.  \n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n    \n    /**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @deprecated no longer implemented\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(5);\nvar Engine = __webpack_require__(17);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function run(time){\n            runner.frameRequestId = _requestAnimationFrame(run);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            delta;\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n\n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n\n        Engine.update(engine, delta);\n\n        Events.trigger(runner, 'afterUpdate', event);\n\n        Events.trigger(runner, 'afterTick', event);\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Collision`.\n*\n* All usage should be migrated to `Matter.Collision`.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n* @deprecated\n*/\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Collision = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @deprecated replaced by Collision.collides\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB) {\n        return Collision.collides(bodyA, bodyB);\n    };\n\n    deprecated(SAT, 'collides', 'SAT.collides ➤ replaced by Collision.collides');\n\n})();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(6);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * See above, aliases for back compatibility only\n     */\n    World.create = Composite.create;\n    World.add = Composite.add;\n    World.remove = Composite.remove;\n    World.clear = Composite.clear;\n    World.addComposite = Composite.addComposite;\n    World.addBody = Composite.addBody;\n    World.addConstraint = Composite.addConstraint;\n\n})();\n\n\n/***/ })\n/******/ ]);\n});"],"names":["deg2rad","deg","__name","rad2deg","rad","clamp","val","min","max","lerp","a","b","t","Vec2","Color","map","v","l1","h1","l2","h2","mapc","_Vec2","x","y","angle","args","p2","vec2","s","len","normal","on","dest","cos","sin","n","m","other","Rect","_Color","r","g","arr","hex","result","h","l","hue2rgb","p","q","d","rgb","hsl2rgb","Quad","_Quad","w","quad","Mat4","_Mat4","c","m0","m1","m4","m5","out","i","j","det","f00","f01","f02","f03","f04","f05","f06","f07","f08","f09","f10","f11","f12","f13","f14","f15","f16","f17","f18","wave","lo","hi","f","A","C","M","RNG","seed","defRNG","randSeed","rand","randi","chance","choose","list","testRectRect","r1","r2","testLineLineT","denom","ua","ub","testLineLine","testRectLine","testRectPoint","pts","Line","pt","testLinePoint","v1","v2","testLineCircle","circle","centerToOrigin","dis","t1","t2","testCirclePoint","testCirclePolygon","prev","cur","testPolygonPoint","poly","_Line","p1","_Rect","pos","width","height","Polygon","dx","dy","Circle","_Circle","center","radius","tr","Ellipse","_Ellipse","rx","ry","_Polygon","total","sat","overlap","displacement","axisProj","min1","max1","min2","max2","o","o1","o2","Registry","id","EventController","_EventController","cancel","events","ev","e","Event","action","res","EventHandler","name","deepEq","k1","k2","k","base64ToArrayBuffer","base64","binstr","bytes","dataURLToArrayBuffer","url","download","filename","downloadText","text","downloadJSON","data","downloadBlob","blob","isDataURL","str","getExt","overload2","fn1","fn2","al","uid","getErrorMessage","error","BinaryHeap","compareFn","item","lastItem","parent","child","index1","index2","GRAPHEMES","runes","string","increment","nextUnits","isGrapheme","isVariationSelector","isDiacriticalMark","isZeroWidthJoiner","current","isFirstOfSurrogatePair","currentPair","nextPair","isRegionalIndicator","isSubdivisionFlag","isSupplementarySpecialpurposePlane","isFitzpatrickModifier","betweenInclusive","codePointFromSurrogatePair","codePoint","pair","highOffset","lowOffset","value","lower","upper","gamepad_default","ButtonState","btn","GamepadState","FPSCounter","dt","app_default","opt","state","canvas","time","fps","numFrames","screenshot","setCursor","getCursor","setCursorLocked","isCursorLocked","enterFullscreen","el","exitFullscreen","getFullscreenElement","setFullscreen","isFullscreen","quit","canvasEvents","docEvents","winEvents","resizeObserver","run","accumulatedDt","frame","loopTime","realDt","desiredDt","processInput","resetInput","isTouchscreen","mousePos","mouseDeltaPos","isMousePressed","isMouseDown","isMouseReleased","isMouseMoved","isKeyPressed","isKeyPressedRepeat","isKeyDown","isKeyReleased","isGamepadButtonPressed","isGamepadButtonDown","isGamepadButtonReleased","onResize","onKeyDown","key","onKeyPress","onKeyPressRepeat","onKeyRelease","onMouseDown","mouse","onMousePress","onMouseRelease","onMouseMove","onCharInput","onTouchStart","onTouchMove","onTouchEnd","onScroll","onHide","onShow","onGamepadButtonDown","onGamepadButtonPress","onGamepadButtonRelease","onGamepadStick","stick","onGamepadConnect","onGamepadDisconnect","getGamepadStick","charInputted","getGamepads","processGamepad","registerGamepad","browserGamepad","gamepad","removeGamepad","gamepadState","stickName","pd","cw","ch","ww","wh","rw","rc","ratio","offset","MOUSE_BUTTONS","PREVENT_DEFAULT_KEYS","KEY_ALIAS","touches","box","kbGamepad","entries","entry","Texture","_Texture","ctx","gl","filter","wrap","img","tex","FrameBuffer","bytesPerRow","temp","topOffset","bottomOffset","Shader","vert","frag","attribs","vertShader","fragShader","prog","attrib","vertError","fragError","uniform","loc","BatchRenderer","format","maxVertices","maxIndices","sum","primitive","verts","indices","shader","indexOffset","genStack","setFunc","stack","push","pop","initGfx","opts","gc","onDestroy","destroy","curVertexFormat","setVertexFormat","fmt","stride","pushTexture2D","popTexture2D","pushArrayBuffer","popArrayBuffer","pushElementArrayBuffer","popElementArrayBuffer","pushFramebuffer","popFramebuffer","pushRenderbuffer","popRenderbuffer","pushViewport","popViewport","pushProgram","popProgram","Asset","_Asset","loader","err","asset","AssetBucket","handle","loaded","assets_default","setURLPrefix","prefix","getURLPrefix","fetchURL","path","fetchJSON","fetchText","fetchArrayBuffer","loadImg","src","resolve","reject","c2","c3","c4","c5","easings","easings_default","TexPacker","gfx","curTex","VERSION","ASCII_CHARS","DEF_ANCHOR","BG_GRID_SIZE","DEF_FONT","DBG_FONT","DEF_TEXT_SIZE","DEF_TEXT_CACHE_SIZE","MAX_TEXT_CACHE_SIZE","FONT_ATLAS_WIDTH","FONT_ATLAS_HEIGHT","SPRITE_ATLAS_WIDTH","SPRITE_ATLAS_HEIGHT","UV_PAD","DEF_HASH_GRID_SIZE","DEF_FONT_FILTER","LOG_MAX","LOG_TIME","VERTEX_FORMAT","STRIDE","MAX_BATCHED_QUAD","MAX_BATCHED_VERTS","MAX_BATCHED_INDICES","VERT_TEMPLATE","FRAG_TEMPLATE","DEF_VERT","DEF_FRAG","COMP_DESC","COMP_EVENTS","anchorPt","orig","alignPt","align","createEmptyAudioBuffer","kaboom_default","gopt","root","gscale","fixedSize","styles","pixelDensity","fontCacheCanvas","fontCacheC2d","app","ggl","ass","defShader","makeShader","emptyTex","frameBuffer","bgColor","bgAlpha","renderer","bgTex","SpriteData","frames","anims","slice9","assets","slice","SoundData","buf","audio","masterNode","burpSnd","burp_default","game","make","timer","load","prom","loadProgress","buckets","bucket","loadRoot","loadJSON","FontData","face","loadFont","font","loadBitmapFont","gw","gh","makeFont","qw","qh","loadSpriteAtlas","rej","json","atlas","info","spr","createSpriteSheet","images","c2d","merged","loadSprite","loadPedit","loadAseprite","imgSrc","jsonSrc","resolveJSON","size","anim","loadShader","loadShaderURL","resolveUrl","vcode","fcode","loadSound","loadBean","bean_default","getSprite","getSound","getFont","getBitmapFont","getShader","getAsset","resolveSprite","resolveSound","snd","resolveShader","resolveFont","bfont","volume","play","paused","srcNode","onEndEvents","gainNode","startTime","stopTime","started","getTime","start","cloneNode","oldNode","newNode","burp","makeCanvas","vertSrc","fragSrc","match","line","msg","ty","chars","cols","charMap","drawRaw","fixed","shaderSrc","transform","vv","screen2ndc","flush","frameStart","drawUnscaled","drawUVQuad","usePostEffect","frameEnd","ow","oh","drawTexture","pushMatrix","pushTranslate","pushScale","pushRotate","pushTransform","popTransform","color","opacity","uvPadX","uvPadY","qx","qy","scale","repX","repY","drawSprite","getArcPts","radiusX","radiusY","end","nverts","step","drawRect","drawPolygon","drawLine","drawLines","minSLen","drawCircle","drawTriangle","drawEllipse","polyOpt","npts","drawStenciled","content","mask","test","drawMasked","drawSubtracted","getViewportScale","applyCharTransform","fchar","TEXT_STYLE_RE","compileStyledText","charStyleMap","renderText","idxOffset","origIdx","fontAtlases","formatText","fontName","lineSpacing","letterSpacing","curX","tw","th","lines","curLine","cursor","lastSpace","lastSpaceWidth","fchars","ox","idx","style","drawText","drawFormattedText","ftext","windowToContent","contentToView","debugPaused","debug","updateFrame","get","camPos","camScale","camRot","shake","intensity","toScreen","toWorld","calcTransform","obj","comps","compStates","cleanups","inputEvents","onCurCompCleanup","trigger","tag","children","maskFunc","comp","prop","func","checkDeps","dep","recurse","isChild","onAdd","ctrl","cb","evs","event","onUpdate","add","onDraw","onCollide","col","onCollideUpdate","onCollideEnd","forAllCurrentAndFuture","onClick","onHover","onHoverUpdate","onHoverEnd","setGravity","getGravity","setBackground","getBackground","speed","diff","isFixed","toFixed","rotate","easeFunc","tween","anchor","z","follow","move","dir","DEF_OFFSCREEN_DIS","offscreen","distance","isOut","screenRect","area","colliding","collidingThisFrame","mpos","hovering","localArea","getRenderProps","sprite","spriteData","curAnim","curAnimDir","spriteLoadedEvent","calcTexScale","left","right","top","bottom","iw","ih","w1","w3","w2","h3","quads","uv","setSpriteData","onLoad","prevAnim","update","nt","polygon","rect","uvquad","outline","actions","curTimer","newAction","from","to","duration","setValue","curTime","DEF_JUMP_FORCE","MAX_VEL","body","vel","curPlatform","lastPlatformPos","wantFall","tmass","col2","prevVelY","force","doubleJump","numJumps","jumpsLeft","stay","scenesToStay","health","hp","maxHP","origHP","lifespan","fade","wait","initState","stateList","transitions","initStateEvents","didFirstEnter","oldState","available","fadeIn","done","drawon","scene","def","go","initEvents","onSceneLeave","getData","setData","plug","plugin","funcs","funcsObj","EdgeMask","tile","tilePos","isObstacle","cost","edges","getEdgeMask","loopup","edgeMask","level","is","addLevel","numRows","numColumns","spatialMap","costMap","edgeMap","connectivityMap","tile2Hash","hash2Tile","hash","createSpatialMap","insertIntoSpatialMap","removeFromSpatialMap","index","updateSpatialMap","spatialMapChanged","createCostMap","objects","createEdgeMap","createConnectivityMap","traverse","frontier","getNeighbours","getCost","node","neighbour","getHeuristic","goal","diagonals","levelComp","hasPos","hasTile","cameFrom","costSoFar","neighbours","next","newCost","row","keys","agent","target","navMapChangedEvent","record","frameRate","stream","audioDest","recorder","chunks","isFocused","readd","destroyAll","loop","boom","kaSprite","ka_default","boomSprite","boom_default","addKaboom","kaboom","ka","Collision","source","resolved","checkFrame","grid","cellSize","checkObj","aobj","bbox","xmin","ymin","xmax","ymax","checked","cell","check","col1","drawFrame","cam","drawLoadScreen","progress","drawInspectText","txt","pad","ftxt","bw","bh","drawDebug","inspecting","flipped","logs","log","onLoading","onError","handleErr","textStyle","title","onCleanup","numTextureUnits","unit","isFirstFrame","updateViewport","rg","sw","sh"],"version":3,"file":"index.b7a05eb9.js.map","sourceRoot":"/__parcel_source_root/"}